
Sonar2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000104e  000010e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000104e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004d  00800132  00800132  00001114  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001114  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001170  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000011b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c37  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000801  00000000  00000000  00001e77  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c1  00000000  00000000  00002678  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00002c3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  00002e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000528  00000000  00000000  000032ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003817  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 bb 00 	jmp	0x176	; 0x176 <__vector_10>
      2c:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 26 01 	jmp	0x24c	; 0x24c <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ee e4       	ldi	r30, 0x4E	; 78
      7c:	f0 e1       	ldi	r31, 0x10	; 16
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 33       	cpi	r26, 0x32	; 50
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a2 e3       	ldi	r26, 0x32	; 50
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 37       	cpi	r26, 0x7F	; 127
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 99 01 	call	0x332	; 0x332 <main>
      9e:	0c 94 25 08 	jmp	0x104a	; 0x104a <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_init>:
	TIMSK0 = (1 << TOIE0);
}

long map(long x, long in_min, long in_max, long out_min, long out_max) {
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
      a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      aa:	87 e6       	ldi	r24, 0x67	; 103
      ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      b0:	88 e1       	ldi	r24, 0x18	; 24
      b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
      b6:	8e e0       	ldi	r24, 0x0E	; 14
      b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
      bc:	08 95       	ret

000000be <USART_send>:
      be:	e0 ec       	ldi	r30, 0xC0	; 192
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	90 81       	ld	r25, Z
      c4:	95 ff       	sbrs	r25, 5
      c6:	fd cf       	rjmp	.-6      	; 0xc2 <USART_send+0x4>
      c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      cc:	08 95       	ret

000000ce <USART_putstring>:
      ce:	cf 93       	push	r28
      d0:	df 93       	push	r29
      d2:	ec 01       	movw	r28, r24
      d4:	88 81       	ld	r24, Y
      d6:	88 23       	and	r24, r24
      d8:	31 f0       	breq	.+12     	; 0xe6 <USART_putstring+0x18>
      da:	21 96       	adiw	r28, 0x01	; 1
      dc:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_send>
      e0:	89 91       	ld	r24, Y+
      e2:	81 11       	cpse	r24, r1
      e4:	fb cf       	rjmp	.-10     	; 0xdc <USART_putstring+0xe>
      e6:	df 91       	pop	r29
      e8:	cf 91       	pop	r28
      ea:	08 95       	ret

000000ec <__vector_11>:
      ec:	1f 92       	push	r1
      ee:	0f 92       	push	r0
      f0:	0f b6       	in	r0, 0x3f	; 63
      f2:	0f 92       	push	r0
      f4:	11 24       	eor	r1, r1
      f6:	8f 93       	push	r24
      f8:	9f 93       	push	r25
      fa:	ef 93       	push	r30
      fc:	ff 93       	push	r31
      fe:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <stop>
     102:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <stop+0x1>
     106:	89 2b       	or	r24, r25
     108:	81 f0       	breq	.+32     	; 0x12a <__vector_11+0x3e>
     10a:	e1 e8       	ldi	r30, 0x81	; 129
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	80 81       	ld	r24, Z
     110:	80 64       	ori	r24, 0x40	; 64
     112:	80 83       	st	Z, r24
     114:	ef e6       	ldi	r30, 0x6F	; 111
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	81 60       	ori	r24, 0x01	; 1
     11c:	80 83       	st	Z, r24
     11e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     122:	10 82       	st	Z, r1
     124:	80 81       	ld	r24, Z
     126:	80 62       	ori	r24, 0x20	; 32
     128:	80 83       	st	Z, r24
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <stop+0x1>
     132:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <stop>
     136:	ff 91       	pop	r31
     138:	ef 91       	pop	r30
     13a:	9f 91       	pop	r25
     13c:	8f 91       	pop	r24
     13e:	0f 90       	pop	r0
     140:	0f be       	out	0x3f, r0	; 63
     142:	0f 90       	pop	r0
     144:	1f 90       	pop	r1
     146:	18 95       	reti

00000148 <__vector_13>:
     148:	1f 92       	push	r1
     14a:	0f 92       	push	r0
     14c:	0f b6       	in	r0, 0x3f	; 63
     14e:	0f 92       	push	r0
     150:	11 24       	eor	r1, r1
     152:	8f 93       	push	r24
     154:	9f 93       	push	r25
     156:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     15a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     15e:	01 96       	adiw	r24, 0x01	; 1
     160:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <overflows+0x1>
     164:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <overflows>
     168:	9f 91       	pop	r25
     16a:	8f 91       	pop	r24
     16c:	0f 90       	pop	r0
     16e:	0f be       	out	0x3f, r0	; 63
     170:	0f 90       	pop	r0
     172:	1f 90       	pop	r1
     174:	18 95       	reti

00000176 <__vector_10>:
     176:	1f 92       	push	r1
     178:	0f 92       	push	r0
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	0f 92       	push	r0
     17e:	11 24       	eor	r1, r1
     180:	8f 93       	push	r24
     182:	9f 93       	push	r25
     184:	ef 93       	push	r30
     186:	ff 93       	push	r31
     188:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <lead>
     18c:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <lead+0x1>
     190:	89 2b       	or	r24, r25
     192:	49 f0       	breq	.+18     	; 0x1a6 <__vector_10+0x30>
     194:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     198:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     19c:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <begin+0x1>
     1a0:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <begin>
     1a4:	13 c0       	rjmp	.+38     	; 0x1cc <__vector_10+0x56>
     1a6:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     1aa:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     1ae:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <end+0x1>
     1b2:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <end>
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <prin+0x1>
     1be:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <prin>
     1c2:	ef e6       	ldi	r30, 0x6F	; 111
     1c4:	f0 e0       	ldi	r31, 0x00	; 0
     1c6:	80 81       	ld	r24, Z
     1c8:	8f 7d       	andi	r24, 0xDF	; 223
     1ca:	80 83       	st	Z, r24
     1cc:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <lead+0x1>
     1d0:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <lead>
     1d4:	e1 e8       	ldi	r30, 0x81	; 129
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	8f 7b       	andi	r24, 0xBF	; 191
     1dc:	80 83       	st	Z, r24
     1de:	ff 91       	pop	r31
     1e0:	ef 91       	pop	r30
     1e2:	9f 91       	pop	r25
     1e4:	8f 91       	pop	r24
     1e6:	0f 90       	pop	r0
     1e8:	0f be       	out	0x3f, r0	; 63
     1ea:	0f 90       	pop	r0
     1ec:	1f 90       	pop	r1
     1ee:	18 95       	reti

000001f0 <send_pulse>:
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <lead+0x1>
     1f8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <lead>
     1fc:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <overflows+0x1>
     200:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <overflows>
     204:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <stop+0x1>
     208:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <stop>
     20c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     210:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     214:	80 56       	subi	r24, 0x60	; 96
     216:	9f 4f       	sbci	r25, 0xFF	; 255
     218:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     21c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     220:	08 95       	ret

00000222 <timer1_init>:
     222:	84 b1       	in	r24, 0x04	; 4
     224:	86 60       	ori	r24, 0x06	; 6
     226:	84 b9       	out	0x04, r24	; 4
     228:	20 98       	cbi	0x04, 0	; 4
     22a:	80 e4       	ldi	r24, 0x40	; 64
     22c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     236:	82 e0       	ldi	r24, 0x02	; 2
     238:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     23c:	78 94       	sei
     23e:	08 95       	ret

00000240 <timer0_init>:
     240:	85 e0       	ldi	r24, 0x05	; 5
     242:	85 bd       	out	0x25, r24	; 37
     244:	81 e0       	ldi	r24, 0x01	; 1
     246:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     24a:	08 95       	ret

0000024c <__vector_16>:


ISR (TIMER0_OVF_vect) {
     24c:	1f 92       	push	r1
     24e:	0f 92       	push	r0
     250:	0f b6       	in	r0, 0x3f	; 63
     252:	0f 92       	push	r0
     254:	11 24       	eor	r1, r1
     256:	8f 93       	push	r24
     258:	9f 93       	push	r25
	overflows0++;
     25a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows0>
     25e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows0+0x1>
     262:	01 96       	adiw	r24, 0x01	; 1
     264:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <overflows0+0x1>
     268:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <overflows0>
}
     26c:	9f 91       	pop	r25
     26e:	8f 91       	pop	r24
     270:	0f 90       	pop	r0
     272:	0f be       	out	0x3f, r0	; 63
     274:	0f 90       	pop	r0
     276:	1f 90       	pop	r1
     278:	18 95       	reti

0000027a <pwm_init>:

void pwm_init() {
	DDRD |= (1<< PIND3); //set OC2B as output
     27a:	53 9a       	sbi	0x0a, 3	; 10
	TCCR2A |= 0x20; //use a non-inverting signal
     27c:	e0 eb       	ldi	r30, 0xB0	; 176
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	80 81       	ld	r24, Z
     282:	80 62       	ori	r24, 0x20	; 32
     284:	80 83       	st	Z, r24
	TCCR2A |= 0x03;  // use fast pwm
     286:	80 81       	ld	r24, Z
     288:	83 60       	ori	r24, 0x03	; 3
     28a:	80 83       	st	Z, r24
	TCCR2B |= 0x08; // waveform generation
     28c:	e1 eb       	ldi	r30, 0xB1	; 177
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	88 60       	ori	r24, 0x08	; 8
     294:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS22); //prescaler 64
     296:	80 81       	ld	r24, Z
     298:	84 60       	ori	r24, 0x04	; 4
     29a:	80 83       	st	Z, r24

	OCR2A = pitch_ticks;
     29c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     2a0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     2a4:	e3 eb       	ldi	r30, 0xB3	; 179
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 83       	st	Z, r24
	OCR2B = OCR2A/2;
     2aa:	80 81       	ld	r24, Z
     2ac:	86 95       	lsr	r24
     2ae:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     2b2:	08 95       	ret

000002b4 <summer>:
}

int summer(int nums[]) {
	int s;
	for(int i = 0; i < msize; i++) {
     2b4:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <msize>
     2b8:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <msize+0x1>
     2bc:	14 16       	cp	r1, r20
     2be:	15 06       	cpc	r1, r21
     2c0:	64 f4       	brge	.+24     	; 0x2da <summer+0x26>
     2c2:	fc 01       	movw	r30, r24
     2c4:	44 0f       	add	r20, r20
     2c6:	55 1f       	adc	r21, r21
     2c8:	84 0f       	add	r24, r20
     2ca:	95 1f       	adc	r25, r21
		s += nums[i];
     2cc:	41 91       	ld	r20, Z+
     2ce:	51 91       	ld	r21, Z+
     2d0:	24 0f       	add	r18, r20
     2d2:	35 1f       	adc	r19, r21
	OCR2B = OCR2A/2;
}

int summer(int nums[]) {
	int s;
	for(int i = 0; i < msize; i++) {
     2d4:	e8 17       	cp	r30, r24
     2d6:	f9 07       	cpc	r31, r25
     2d8:	c9 f7       	brne	.-14     	; 0x2cc <summer+0x18>
		s += nums[i];
	}
	return s;
}
     2da:	c9 01       	movw	r24, r18
     2dc:	08 95       	ret

000002de <readADC>:

float readADC(int pin) {
	int mask = 0xF0;
	ADMUX = (ADMUX & mask); //turning on ADC0
     2de:	ec e7       	ldi	r30, 0x7C	; 124
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	90 81       	ld	r25, Z
     2e4:	90 7f       	andi	r25, 0xF0	; 240
     2e6:	90 83       	st	Z, r25
	ADMUX |=(1<< REFS0); //internal reference
     2e8:	90 81       	ld	r25, Z
     2ea:	90 64       	ori	r25, 0x40	; 64
     2ec:	90 83       	st	Z, r25
	ADMUX |= pin; //telling it which pin
     2ee:	90 81       	ld	r25, Z
     2f0:	89 2b       	or	r24, r25
     2f2:	80 83       	st	Z, r24
	ADCSRA |= (1<< ADSC) | (1<<ADEN) | (1<<ADPS1) | (1<<ADPS2); //start, enable, prescale, prescale
     2f4:	ea e7       	ldi	r30, 0x7A	; 122
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	80 81       	ld	r24, Z
     2fa:	86 6c       	ori	r24, 0xC6	; 198
     2fc:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC)); //wait: ADCSRA becomes done when it goes to 0
     2fe:	80 81       	ld	r24, Z
     300:	86 fd       	sbrc	r24, 6
     302:	fd cf       	rjmp	.-6      	; 0x2fe <readADC+0x20>
	int foo = ADCL; //graph LSB
     304:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	int foo1 = ADCH; //grab MSB
     308:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	uint16_t combined = (foo1 << 8 ) | (foo & 0xff);
	float v = 5.0*(float)combined/1024;
	return v;
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	78 2b       	or	r23, r24
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 ad 03 	call	0x75a	; 0x75a <__floatunsisf>
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	40 ea       	ldi	r20, 0xA0	; 160
     31e:	50 e4       	ldi	r21, 0x40	; 64
     320:	0e 94 13 04 	call	0x826	; 0x826 <__mulsf3>
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e8       	ldi	r20, 0x80	; 128
     32a:	5a e3       	ldi	r21, 0x3A	; 58
     32c:	0e 94 13 04 	call	0x826	; 0x826 <__mulsf3>
}
     330:	08 95       	ret

00000332 <main>:

int main(void) {
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	00 d0       	rcall	.+0      	; 0x338 <main+0x6>
     338:	cd b7       	in	r28, 0x3d	; 61
     33a:	de b7       	in	r29, 0x3e	; 62
	
	USART_init();
     33c:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_init>
	//USART_putstring(InMain);
	timer1_init(); // for timer 1
     340:	0e 94 11 01 	call	0x222	; 0x222 <timer1_init>
	timer0_init();
     344:	0e 94 20 01 	call	0x240	; 0x240 <timer0_init>
	pwm_init();
     348:	0e 94 3d 01 	call	0x27a	; 0x27a <pwm_init>
	OCR1A = TCNT1 + 16;
     34c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     350:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     354:	40 96       	adiw	r24, 0x10	; 16
     356:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     35a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	send_pulse(); //call the function
     35e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <send_pulse>
	/* Replace with your application code */
	DDRB |= 0b00011100; //turn on PB2, PB3, PB4 for writing
     362:	84 b1       	in	r24, 0x04	; 4
     364:	8c 61       	ori	r24, 0x1C	; 28
     366:	84 b9       	out	0x04, r24	; 4
	PORTB |= 0b00011100;
     368:	85 b1       	in	r24, 0x05	; 5
     36a:	8c 61       	ori	r24, 0x1C	; 28
     36c:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<PIND7); //PIND7 is read
     36e:	57 98       	cbi	0x0a, 7	; 10
					}
					else {
						disc = 1;
					}
					//disc ^= 1; //toggle disc
					sprintf(buff,"disc: %d \n", disc);
     370:	0f 2e       	mov	r0, r31
     372:	f6 e2       	ldi	r31, 0x26	; 38
     374:	2f 2e       	mov	r2, r31
     376:	f1 e0       	ldi	r31, 0x01	; 1
     378:	3f 2e       	mov	r3, r31
     37a:	f0 2d       	mov	r31, r0
     37c:	05 e4       	ldi	r16, 0x45	; 69
     37e:	11 e0       	ldi	r17, 0x01	; 1
     380:	09 83       	std	Y+1, r16	; 0x01
     382:	1a 83       	std	Y+2, r17	; 0x02
	/* Replace with your application code */
	DDRB |= 0b00011100; //turn on PB2, PB3, PB4 for writing
	PORTB |= 0b00011100;
	DDRD &= ~(1<<PIND7); //PIND7 is read
	while(1) {
		if (overflows0 == 1) {
     384:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows0>
     388:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows0+0x1>
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	09 f0       	breq	.+2      	; 0x392 <main+0x60>
     390:	a9 c0       	rjmp	.+338    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
			buttonnew = PIND & (1<<PIND7);
     392:	89 b1       	in	r24, 0x09	; 9
     394:	80 78       	andi	r24, 0x80	; 128
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <buttonnew+0x1>
     39c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <buttonnew>
			//sprintf(buff,"new: %d \n", buttonnew);
			//USART_putstring(buff);
			if (buttonnew) {//if button new is on and the old button state was off
     3a0:	89 2b       	or	r24, r25
     3a2:	29 f1       	breq	.+74     	; 0x3ee <main+0xbc>
							//sprintf(buff,"old: %d \n", buttonold);
							//USART_putstring(buff);
				if (buttonold == 0) {
     3a4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <buttonold>
     3a8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <buttonold+0x1>
     3ac:	89 2b       	or	r24, r25
     3ae:	f9 f4       	brne	.+62     	; 0x3ee <main+0xbc>
					if (disc == 1) {
     3b0:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <disc>
     3b4:	81 30       	cpi	r24, 0x01	; 1
     3b6:	19 f4       	brne	.+6      	; 0x3be <main+0x8c>
						disc = 0;
     3b8:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <disc>
     3bc:	04 c0       	rjmp	.+8      	; 0x3c6 <main+0x94>
					}
					else {
						disc = 1;
     3be:	cc 24       	eor	r12, r12
     3c0:	c3 94       	inc	r12
     3c2:	c0 92 42 01 	sts	0x0142, r12	; 0x800142 <disc>
					}
					//disc ^= 1; //toggle disc
					sprintf(buff,"disc: %d \n", disc);
     3c6:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <disc>
     3ca:	1f 92       	push	r1
     3cc:	8f 93       	push	r24
     3ce:	3f 92       	push	r3
     3d0:	2f 92       	push	r2
     3d2:	1f 93       	push	r17
     3d4:	0f 93       	push	r16
     3d6:	0e 94 3b 05 	call	0xa76	; 0xa76 <sprintf>
					USART_putstring(buff);
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	9a 81       	ldd	r25, Y+2	; 0x02
     3de:	0e 94 67 00 	call	0xce	; 0xce <USART_putstring>
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
					}
				}
				buttonold = buttonnew;
     3ee:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <buttonnew>
     3f2:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <buttonnew+0x1>
     3f6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <buttonold+0x1>
     3fa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <buttonold>
			
			
			v = readADC(0); //read pin 0
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	0e 94 6f 01 	call	0x2de	; 0x2de <readADC>
     406:	60 93 6b 01 	sts	0x016B, r22	; 0x80016b <v>
     40a:	70 93 6c 01 	sts	0x016C, r23	; 0x80016c <v+0x1>
     40e:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <v+0x2>
     412:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <v+0x3>
			mv = (int)(1000*v);
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	4a e7       	ldi	r20, 0x7A	; 122
     41c:	54 e4       	ldi	r21, 0x44	; 68
     41e:	0e 94 13 04 	call	0x826	; 0x826 <__mulsf3>
     422:	0e 94 77 03 	call	0x6ee	; 0x6ee <__fixsfsi>
     426:	70 93 6a 01 	sts	0x016A, r23	; 0x80016a <mv+0x1>
     42a:	60 93 69 01 	sts	0x0169, r22	; 0x800169 <mv>
			dac = map(mv, 100, 3300, 0, 6);
     42e:	cb 01       	movw	r24, r22
     430:	77 0f       	add	r23, r23
     432:	aa 0b       	sbc	r26, r26
     434:	bb 0b       	sbc	r27, r27
     436:	84 56       	subi	r24, 0x64	; 100
     438:	91 09       	sbc	r25, r1
     43a:	a1 09       	sbc	r26, r1
     43c:	b1 09       	sbc	r27, r1
     43e:	6c 01       	movw	r12, r24
     440:	7d 01       	movw	r14, r26
     442:	cc 0c       	add	r12, r12
     444:	dd 1c       	adc	r13, r13
     446:	ee 1c       	adc	r14, r14
     448:	ff 1c       	adc	r15, r15
     44a:	8c 0d       	add	r24, r12
     44c:	9d 1d       	adc	r25, r13
     44e:	ae 1d       	adc	r26, r14
     450:	bf 1d       	adc	r27, r15
     452:	bc 01       	movw	r22, r24
     454:	cd 01       	movw	r24, r26
     456:	66 0f       	add	r22, r22
     458:	77 1f       	adc	r23, r23
     45a:	88 1f       	adc	r24, r24
     45c:	99 1f       	adc	r25, r25
     45e:	20 e8       	ldi	r18, 0x80	; 128
     460:	3c e0       	ldi	r19, 0x0C	; 12
     462:	40 e0       	ldi	r20, 0x00	; 0
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	0e 94 cc 04 	call	0x998	; 0x998 <__divmodsi4>
     46a:	30 93 74 01 	sts	0x0174, r19	; 0x800174 <dac+0x1>
     46e:	20 93 73 01 	sts	0x0173, r18	; 0x800173 <dac>

			b2 = (dac>>0) & 1;
     472:	b9 01       	movw	r22, r18
     474:	61 70       	andi	r22, 0x01	; 1
     476:	77 27       	eor	r23, r23
     478:	70 93 44 01 	sts	0x0144, r23	; 0x800144 <b2+0x1>
     47c:	60 93 43 01 	sts	0x0143, r22	; 0x800143 <b2>
			b3 = (dac>>1) & 1;
     480:	c9 01       	movw	r24, r18
     482:	95 95       	asr	r25
     484:	87 95       	ror	r24
     486:	81 70       	andi	r24, 0x01	; 1
     488:	99 27       	eor	r25, r25
     48a:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <b3+0x1>
     48e:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <b3>
			b4 = (dac>>2) & 1;
     492:	35 95       	asr	r19
     494:	27 95       	ror	r18
     496:	35 95       	asr	r19
     498:	27 95       	ror	r18
     49a:	21 70       	andi	r18, 0x01	; 1
     49c:	33 27       	eor	r19, r19
     49e:	30 93 66 01 	sts	0x0166, r19	; 0x800166 <b4+0x1>
     4a2:	20 93 65 01 	sts	0x0165, r18	; 0x800165 <b4>
			if(b2) {
     4a6:	67 2b       	or	r22, r23
     4a8:	11 f0       	breq	.+4      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
				PORTB |= (1<<PINB2);
     4aa:	2a 9a       	sbi	0x05, 2	; 5
     4ac:	01 c0       	rjmp	.+2      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
			}
			else { PORTB &= ~(1<<PINB2); }
     4ae:	2a 98       	cbi	0x05, 2	; 5
			if(b3) {
     4b0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <b3>
     4b4:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <b3+0x1>
     4b8:	89 2b       	or	r24, r25
     4ba:	11 f0       	breq	.+4      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
				PORTB |= (1<<PINB3);
     4bc:	2b 9a       	sbi	0x05, 3	; 5
     4be:	01 c0       	rjmp	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
			}
			else { PORTB &= ~(1<<PINB3); }
     4c0:	2b 98       	cbi	0x05, 3	; 5
			if(b4) {
     4c2:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <b4>
     4c6:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <b4+0x1>
     4ca:	89 2b       	or	r24, r25
     4cc:	11 f0       	breq	.+4      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
				PORTB |= (1<<PINB4);
     4ce:	2c 9a       	sbi	0x05, 4	; 5
     4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
			}
			else { PORTB &= ~(1<<PINB4); }
     4d2:	2c 98       	cbi	0x05, 4	; 5
			timer1_init();
     4d4:	0e 94 11 01 	call	0x222	; 0x222 <timer1_init>
			send_pulse();
     4d8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <send_pulse>
			overflows0 = 0;
     4dc:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <overflows0+0x1>
     4e0:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <overflows0>
		}
		if(prin) {
     4e4:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <prin>
     4e8:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <prin+0x1>
     4ec:	89 2b       	or	r24, r25
     4ee:	09 f4       	brne	.+2      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4f0:	49 cf       	rjmp	.-366    	; 0x384 <main+0x52>
			if (end < begin) {
     4f2:	20 91 67 01 	lds	r18, 0x0167	; 0x800167 <end>
     4f6:	30 91 68 01 	lds	r19, 0x0168	; 0x800168 <end+0x1>
     4fa:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <begin>
     4fe:	90 91 70 01 	lds	r25, 0x0170	; 0x800170 <begin+0x1>
     502:	28 17       	cp	r18, r24
     504:	39 07       	cpc	r19, r25
     506:	48 f4       	brcc	.+18     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
				overflows--;
     508:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     50c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     510:	01 97       	sbiw	r24, 0x01	; 1
     512:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <overflows+0x1>
     516:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <overflows>
			}
			unsigned int num = end - begin;
     51a:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <end>
     51e:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <end+0x1>
     522:	60 91 6f 01 	lds	r22, 0x016F	; 0x80016f <begin>
     526:	70 91 70 01 	lds	r23, 0x0170	; 0x800170 <begin+0x1>
			unsigned long pulse_width = ((long)overflows * 65536u + (long)num);
     52a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     52e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     532:	69 01       	movw	r12, r18
     534:	e1 2c       	mov	r14, r1
     536:	f1 2c       	mov	r15, r1
     538:	76 01       	movw	r14, r12
     53a:	dd 24       	eor	r13, r13
     53c:	cc 24       	eor	r12, r12
     53e:	86 1b       	sub	r24, r22
     540:	97 0b       	sbc	r25, r23
			//sprintf(buff,"Pulse Width: %lu \n", pulse_width);
			//USART_putstring(buff);

			if (pulse_width > pw_max) {
     542:	80 90 0a 01 	lds	r8, 0x010A	; 0x80010a <pw_max>
     546:	90 90 0b 01 	lds	r9, 0x010B	; 0x80010b <pw_max+0x1>
     54a:	a0 90 0c 01 	lds	r10, 0x010C	; 0x80010c <pw_max+0x2>
     54e:	b0 90 0d 01 	lds	r11, 0x010D	; 0x80010d <pw_max+0x3>
     552:	b7 01       	movw	r22, r14
     554:	a6 01       	movw	r20, r12
     556:	48 0f       	add	r20, r24
     558:	59 1f       	adc	r21, r25
     55a:	61 1d       	adc	r22, r1
     55c:	71 1d       	adc	r23, r1
     55e:	84 16       	cp	r8, r20
     560:	95 06       	cpc	r9, r21
     562:	a6 06       	cpc	r10, r22
     564:	b7 06       	cpc	r11, r23
     566:	10 f4       	brcc	.+4      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
     568:	b5 01       	movw	r22, r10
     56a:	a4 01       	movw	r20, r8
				pulse_width = pw_max;
			}
			if (pulse_width < pw_min) {
     56c:	40 90 0e 01 	lds	r4, 0x010E	; 0x80010e <pw_min>
     570:	50 90 0f 01 	lds	r5, 0x010F	; 0x80010f <pw_min+0x1>
     574:	60 90 10 01 	lds	r6, 0x0110	; 0x800110 <pw_min+0x2>
     578:	70 90 11 01 	lds	r7, 0x0111	; 0x800111 <pw_min+0x3>
     57c:	d3 01       	movw	r26, r6
     57e:	c2 01       	movw	r24, r4
     580:	44 16       	cp	r4, r20
     582:	55 06       	cpc	r5, r21
     584:	66 06       	cpc	r6, r22
     586:	77 06       	cpc	r7, r23
     588:	10 f4       	brcc	.+4      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
     58a:	db 01       	movw	r26, r22
     58c:	ca 01       	movw	r24, r20
				pulse_width = pw_min;
			}
			if (disc == 0) {
     58e:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <disc>
     592:	21 11       	cpse	r18, r1
     594:	5b c0       	rjmp	.+182    	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
				pitch_ticks = map(pulse_width, pw_min, pw_max, pitch_tick_min, pitch_tick_max);
     596:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <pitch_tick_min>
     59a:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <pitch_tick_min+0x1>
     59e:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <pitch_tick_min+0x2>
     5a2:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <pitch_tick_min+0x3>
     5a6:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <pitch_tick_max>
     5aa:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <pitch_tick_max+0x1>
     5ae:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <pitch_tick_max+0x2>
     5b2:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <pitch_tick_max+0x3>
     5b6:	9a 01       	movw	r18, r20
     5b8:	ab 01       	movw	r20, r22
     5ba:	2c 19       	sub	r18, r12
     5bc:	3d 09       	sbc	r19, r13
     5be:	4e 09       	sbc	r20, r14
     5c0:	5f 09       	sbc	r21, r15
     5c2:	bc 01       	movw	r22, r24
     5c4:	cd 01       	movw	r24, r26
     5c6:	64 19       	sub	r22, r4
     5c8:	75 09       	sbc	r23, r5
     5ca:	86 09       	sbc	r24, r6
     5cc:	97 09       	sbc	r25, r7
     5ce:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsi3>
     5d2:	a5 01       	movw	r20, r10
     5d4:	94 01       	movw	r18, r8
     5d6:	24 19       	sub	r18, r4
     5d8:	35 09       	sbc	r19, r5
     5da:	46 09       	sbc	r20, r6
     5dc:	57 09       	sbc	r21, r7
     5de:	0e 94 cc 04 	call	0x998	; 0x998 <__divmodsi4>
     5e2:	da 01       	movw	r26, r20
     5e4:	c9 01       	movw	r24, r18
     5e6:	8c 0d       	add	r24, r12
     5e8:	9d 1d       	adc	r25, r13
     5ea:	ae 1d       	adc	r26, r14
     5ec:	bf 1d       	adc	r27, r15
     5ee:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     5f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				movavg[k] = pitch_ticks;
     5f6:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <k>
     5fa:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <k+0x1>
     5fe:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     602:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     606:	fc 01       	movw	r30, r24
     608:	ee 0f       	add	r30, r30
     60a:	ff 1f       	adc	r31, r31
     60c:	eb 58       	subi	r30, 0x8B	; 139
     60e:	fe 4f       	sbci	r31, 0xFE	; 254
     610:	31 83       	std	Z+1, r19	; 0x01
     612:	20 83       	st	Z, r18
				k++;
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <k+0x1>
     61a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <k>
				if (k == msize) {k = 0;}
     61e:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <msize>
     622:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <msize+0x1>
     626:	8c 15       	cp	r24, r12
     628:	9d 05       	cpc	r25, r13
     62a:	21 f4       	brne	.+8      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
     62c:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <k+0x1>
     630:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <k>
				pitch_ticks = summer(movavg)/msize;
     634:	85 e7       	ldi	r24, 0x75	; 117
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <summer>
     63c:	b6 01       	movw	r22, r12
     63e:	0e 94 b8 04 	call	0x970	; 0x970 <__divmodhi4>
     642:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     646:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     64a:	34 c0       	rjmp	.+104    	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
			}
			else {
				pti = map(pulse_width, pw_min, pw_max, 0, 7);
     64c:	84 19       	sub	r24, r4
     64e:	95 09       	sbc	r25, r5
     650:	a6 09       	sbc	r26, r6
     652:	b7 09       	sbc	r27, r7
     654:	ac 01       	movw	r20, r24
     656:	bd 01       	movw	r22, r26
     658:	44 0f       	add	r20, r20
     65a:	55 1f       	adc	r21, r21
     65c:	66 1f       	adc	r22, r22
     65e:	77 1f       	adc	r23, r23
     660:	44 0f       	add	r20, r20
     662:	55 1f       	adc	r21, r21
     664:	66 1f       	adc	r22, r22
     666:	77 1f       	adc	r23, r23
     668:	44 0f       	add	r20, r20
     66a:	55 1f       	adc	r21, r21
     66c:	66 1f       	adc	r22, r22
     66e:	77 1f       	adc	r23, r23
     670:	6a 01       	movw	r12, r20
     672:	7b 01       	movw	r14, r22
     674:	c8 1a       	sub	r12, r24
     676:	d9 0a       	sbc	r13, r25
     678:	ea 0a       	sbc	r14, r26
     67a:	fb 0a       	sbc	r15, r27
     67c:	c7 01       	movw	r24, r14
     67e:	b6 01       	movw	r22, r12
     680:	a5 01       	movw	r20, r10
     682:	94 01       	movw	r18, r8
     684:	24 19       	sub	r18, r4
     686:	35 09       	sbc	r19, r5
     688:	46 09       	sbc	r20, r6
     68a:	57 09       	sbc	r21, r7
     68c:	0e 94 cc 04 	call	0x998	; 0x998 <__divmodsi4>
     690:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <__data_end+0x1>
     694:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <__data_end>
				//movavg[k] = pti;
				//k++;
				//if (k == msize) {k = 0;}
				//pti = summer(movavg)/msize;
				pitch_ticks = disc_ticks[pti];
     698:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <__data_end>
     69c:	f0 91 33 01 	lds	r31, 0x0133	; 0x800133 <__data_end+0x1>
     6a0:	ee 0f       	add	r30, r30
     6a2:	ff 1f       	adc	r31, r31
     6a4:	ea 5e       	subi	r30, 0xEA	; 234
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	80 81       	ld	r24, Z
     6aa:	91 81       	ldd	r25, Z+1	; 0x01
     6ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     6b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			pitch_ticks = disc_ticks[7]; //DELETE THIS, FOR TESTING
     6b4:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <disc_ticks+0xe>
     6b8:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <disc_ticks+0xf>
     6bc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     6c0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			OCR2A = pitch_ticks;
     6c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     6cc:	e3 eb       	ldi	r30, 0xB3	; 179
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 83       	st	Z, r24
			OCR2B = pitch_ticks/2;
     6d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     6da:	96 95       	lsr	r25
     6dc:	87 95       	ror	r24
     6de:	e4 eb       	ldi	r30, 0xB4	; 180
     6e0:	f0 e0       	ldi	r31, 0x00	; 0
     6e2:	80 83       	st	Z, r24
			//sprintf(buff1,"Pitch Ticks: %d \n", pitch_ticks);
			//USART_putstring(buff1);
			prin = 0;
     6e4:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <prin+0x1>
     6e8:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <prin>
     6ec:	4b ce       	rjmp	.-874    	; 0x384 <main+0x52>

000006ee <__fixsfsi>:
     6ee:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fixunssfsi>
     6f2:	68 94       	set
     6f4:	b1 11       	cpse	r27, r1
     6f6:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__fp_szero>
     6fa:	08 95       	ret

000006fc <__fixunssfsi>:
     6fc:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__fp_splitA>
     700:	88 f0       	brcs	.+34     	; 0x724 <__fixunssfsi+0x28>
     702:	9f 57       	subi	r25, 0x7F	; 127
     704:	98 f0       	brcs	.+38     	; 0x72c <__fixunssfsi+0x30>
     706:	b9 2f       	mov	r27, r25
     708:	99 27       	eor	r25, r25
     70a:	b7 51       	subi	r27, 0x17	; 23
     70c:	b0 f0       	brcs	.+44     	; 0x73a <__fixunssfsi+0x3e>
     70e:	e1 f0       	breq	.+56     	; 0x748 <__fixunssfsi+0x4c>
     710:	66 0f       	add	r22, r22
     712:	77 1f       	adc	r23, r23
     714:	88 1f       	adc	r24, r24
     716:	99 1f       	adc	r25, r25
     718:	1a f0       	brmi	.+6      	; 0x720 <__fixunssfsi+0x24>
     71a:	ba 95       	dec	r27
     71c:	c9 f7       	brne	.-14     	; 0x710 <__fixunssfsi+0x14>
     71e:	14 c0       	rjmp	.+40     	; 0x748 <__fixunssfsi+0x4c>
     720:	b1 30       	cpi	r27, 0x01	; 1
     722:	91 f0       	breq	.+36     	; 0x748 <__fixunssfsi+0x4c>
     724:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_zero>
     728:	b1 e0       	ldi	r27, 0x01	; 1
     72a:	08 95       	ret
     72c:	0c 94 0c 04 	jmp	0x818	; 0x818 <__fp_zero>
     730:	67 2f       	mov	r22, r23
     732:	78 2f       	mov	r23, r24
     734:	88 27       	eor	r24, r24
     736:	b8 5f       	subi	r27, 0xF8	; 248
     738:	39 f0       	breq	.+14     	; 0x748 <__fixunssfsi+0x4c>
     73a:	b9 3f       	cpi	r27, 0xF9	; 249
     73c:	cc f3       	brlt	.-14     	; 0x730 <__fixunssfsi+0x34>
     73e:	86 95       	lsr	r24
     740:	77 95       	ror	r23
     742:	67 95       	ror	r22
     744:	b3 95       	inc	r27
     746:	d9 f7       	brne	.-10     	; 0x73e <__fixunssfsi+0x42>
     748:	3e f4       	brtc	.+14     	; 0x758 <__fixunssfsi+0x5c>
     74a:	90 95       	com	r25
     74c:	80 95       	com	r24
     74e:	70 95       	com	r23
     750:	61 95       	neg	r22
     752:	7f 4f       	sbci	r23, 0xFF	; 255
     754:	8f 4f       	sbci	r24, 0xFF	; 255
     756:	9f 4f       	sbci	r25, 0xFF	; 255
     758:	08 95       	ret

0000075a <__floatunsisf>:
     75a:	e8 94       	clt
     75c:	09 c0       	rjmp	.+18     	; 0x770 <__floatsisf+0x12>

0000075e <__floatsisf>:
     75e:	97 fb       	bst	r25, 7
     760:	3e f4       	brtc	.+14     	; 0x770 <__floatsisf+0x12>
     762:	90 95       	com	r25
     764:	80 95       	com	r24
     766:	70 95       	com	r23
     768:	61 95       	neg	r22
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	8f 4f       	sbci	r24, 0xFF	; 255
     76e:	9f 4f       	sbci	r25, 0xFF	; 255
     770:	99 23       	and	r25, r25
     772:	a9 f0       	breq	.+42     	; 0x79e <__floatsisf+0x40>
     774:	f9 2f       	mov	r31, r25
     776:	96 e9       	ldi	r25, 0x96	; 150
     778:	bb 27       	eor	r27, r27
     77a:	93 95       	inc	r25
     77c:	f6 95       	lsr	r31
     77e:	87 95       	ror	r24
     780:	77 95       	ror	r23
     782:	67 95       	ror	r22
     784:	b7 95       	ror	r27
     786:	f1 11       	cpse	r31, r1
     788:	f8 cf       	rjmp	.-16     	; 0x77a <__floatsisf+0x1c>
     78a:	fa f4       	brpl	.+62     	; 0x7ca <__floatsisf+0x6c>
     78c:	bb 0f       	add	r27, r27
     78e:	11 f4       	brne	.+4      	; 0x794 <__floatsisf+0x36>
     790:	60 ff       	sbrs	r22, 0
     792:	1b c0       	rjmp	.+54     	; 0x7ca <__floatsisf+0x6c>
     794:	6f 5f       	subi	r22, 0xFF	; 255
     796:	7f 4f       	sbci	r23, 0xFF	; 255
     798:	8f 4f       	sbci	r24, 0xFF	; 255
     79a:	9f 4f       	sbci	r25, 0xFF	; 255
     79c:	16 c0       	rjmp	.+44     	; 0x7ca <__floatsisf+0x6c>
     79e:	88 23       	and	r24, r24
     7a0:	11 f0       	breq	.+4      	; 0x7a6 <__floatsisf+0x48>
     7a2:	96 e9       	ldi	r25, 0x96	; 150
     7a4:	11 c0       	rjmp	.+34     	; 0x7c8 <__floatsisf+0x6a>
     7a6:	77 23       	and	r23, r23
     7a8:	21 f0       	breq	.+8      	; 0x7b2 <__floatsisf+0x54>
     7aa:	9e e8       	ldi	r25, 0x8E	; 142
     7ac:	87 2f       	mov	r24, r23
     7ae:	76 2f       	mov	r23, r22
     7b0:	05 c0       	rjmp	.+10     	; 0x7bc <__floatsisf+0x5e>
     7b2:	66 23       	and	r22, r22
     7b4:	71 f0       	breq	.+28     	; 0x7d2 <__floatsisf+0x74>
     7b6:	96 e8       	ldi	r25, 0x86	; 134
     7b8:	86 2f       	mov	r24, r22
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	60 e0       	ldi	r22, 0x00	; 0
     7be:	2a f0       	brmi	.+10     	; 0x7ca <__floatsisf+0x6c>
     7c0:	9a 95       	dec	r25
     7c2:	66 0f       	add	r22, r22
     7c4:	77 1f       	adc	r23, r23
     7c6:	88 1f       	adc	r24, r24
     7c8:	da f7       	brpl	.-10     	; 0x7c0 <__floatsisf+0x62>
     7ca:	88 0f       	add	r24, r24
     7cc:	96 95       	lsr	r25
     7ce:	87 95       	ror	r24
     7d0:	97 f9       	bld	r25, 7
     7d2:	08 95       	ret

000007d4 <__fp_split3>:
     7d4:	57 fd       	sbrc	r21, 7
     7d6:	90 58       	subi	r25, 0x80	; 128
     7d8:	44 0f       	add	r20, r20
     7da:	55 1f       	adc	r21, r21
     7dc:	59 f0       	breq	.+22     	; 0x7f4 <__fp_splitA+0x10>
     7de:	5f 3f       	cpi	r21, 0xFF	; 255
     7e0:	71 f0       	breq	.+28     	; 0x7fe <__fp_splitA+0x1a>
     7e2:	47 95       	ror	r20

000007e4 <__fp_splitA>:
     7e4:	88 0f       	add	r24, r24
     7e6:	97 fb       	bst	r25, 7
     7e8:	99 1f       	adc	r25, r25
     7ea:	61 f0       	breq	.+24     	; 0x804 <__fp_splitA+0x20>
     7ec:	9f 3f       	cpi	r25, 0xFF	; 255
     7ee:	79 f0       	breq	.+30     	; 0x80e <__fp_splitA+0x2a>
     7f0:	87 95       	ror	r24
     7f2:	08 95       	ret
     7f4:	12 16       	cp	r1, r18
     7f6:	13 06       	cpc	r1, r19
     7f8:	14 06       	cpc	r1, r20
     7fa:	55 1f       	adc	r21, r21
     7fc:	f2 cf       	rjmp	.-28     	; 0x7e2 <__fp_split3+0xe>
     7fe:	46 95       	lsr	r20
     800:	f1 df       	rcall	.-30     	; 0x7e4 <__fp_splitA>
     802:	08 c0       	rjmp	.+16     	; 0x814 <__fp_splitA+0x30>
     804:	16 16       	cp	r1, r22
     806:	17 06       	cpc	r1, r23
     808:	18 06       	cpc	r1, r24
     80a:	99 1f       	adc	r25, r25
     80c:	f1 cf       	rjmp	.-30     	; 0x7f0 <__fp_splitA+0xc>
     80e:	86 95       	lsr	r24
     810:	71 05       	cpc	r23, r1
     812:	61 05       	cpc	r22, r1
     814:	08 94       	sec
     816:	08 95       	ret

00000818 <__fp_zero>:
     818:	e8 94       	clt

0000081a <__fp_szero>:
     81a:	bb 27       	eor	r27, r27
     81c:	66 27       	eor	r22, r22
     81e:	77 27       	eor	r23, r23
     820:	cb 01       	movw	r24, r22
     822:	97 f9       	bld	r25, 7
     824:	08 95       	ret

00000826 <__mulsf3>:
     826:	0e 94 26 04 	call	0x84c	; 0x84c <__mulsf3x>
     82a:	0c 94 97 04 	jmp	0x92e	; 0x92e <__fp_round>
     82e:	0e 94 89 04 	call	0x912	; 0x912 <__fp_pscA>
     832:	38 f0       	brcs	.+14     	; 0x842 <__mulsf3+0x1c>
     834:	0e 94 90 04 	call	0x920	; 0x920 <__fp_pscB>
     838:	20 f0       	brcs	.+8      	; 0x842 <__mulsf3+0x1c>
     83a:	95 23       	and	r25, r21
     83c:	11 f0       	breq	.+4      	; 0x842 <__mulsf3+0x1c>
     83e:	0c 94 80 04 	jmp	0x900	; 0x900 <__fp_inf>
     842:	0c 94 86 04 	jmp	0x90c	; 0x90c <__fp_nan>
     846:	11 24       	eor	r1, r1
     848:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__fp_szero>

0000084c <__mulsf3x>:
     84c:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__fp_split3>
     850:	70 f3       	brcs	.-36     	; 0x82e <__mulsf3+0x8>

00000852 <__mulsf3_pse>:
     852:	95 9f       	mul	r25, r21
     854:	c1 f3       	breq	.-16     	; 0x846 <__mulsf3+0x20>
     856:	95 0f       	add	r25, r21
     858:	50 e0       	ldi	r21, 0x00	; 0
     85a:	55 1f       	adc	r21, r21
     85c:	62 9f       	mul	r22, r18
     85e:	f0 01       	movw	r30, r0
     860:	72 9f       	mul	r23, r18
     862:	bb 27       	eor	r27, r27
     864:	f0 0d       	add	r31, r0
     866:	b1 1d       	adc	r27, r1
     868:	63 9f       	mul	r22, r19
     86a:	aa 27       	eor	r26, r26
     86c:	f0 0d       	add	r31, r0
     86e:	b1 1d       	adc	r27, r1
     870:	aa 1f       	adc	r26, r26
     872:	64 9f       	mul	r22, r20
     874:	66 27       	eor	r22, r22
     876:	b0 0d       	add	r27, r0
     878:	a1 1d       	adc	r26, r1
     87a:	66 1f       	adc	r22, r22
     87c:	82 9f       	mul	r24, r18
     87e:	22 27       	eor	r18, r18
     880:	b0 0d       	add	r27, r0
     882:	a1 1d       	adc	r26, r1
     884:	62 1f       	adc	r22, r18
     886:	73 9f       	mul	r23, r19
     888:	b0 0d       	add	r27, r0
     88a:	a1 1d       	adc	r26, r1
     88c:	62 1f       	adc	r22, r18
     88e:	83 9f       	mul	r24, r19
     890:	a0 0d       	add	r26, r0
     892:	61 1d       	adc	r22, r1
     894:	22 1f       	adc	r18, r18
     896:	74 9f       	mul	r23, r20
     898:	33 27       	eor	r19, r19
     89a:	a0 0d       	add	r26, r0
     89c:	61 1d       	adc	r22, r1
     89e:	23 1f       	adc	r18, r19
     8a0:	84 9f       	mul	r24, r20
     8a2:	60 0d       	add	r22, r0
     8a4:	21 1d       	adc	r18, r1
     8a6:	82 2f       	mov	r24, r18
     8a8:	76 2f       	mov	r23, r22
     8aa:	6a 2f       	mov	r22, r26
     8ac:	11 24       	eor	r1, r1
     8ae:	9f 57       	subi	r25, 0x7F	; 127
     8b0:	50 40       	sbci	r21, 0x00	; 0
     8b2:	9a f0       	brmi	.+38     	; 0x8da <__mulsf3_pse+0x88>
     8b4:	f1 f0       	breq	.+60     	; 0x8f2 <__mulsf3_pse+0xa0>
     8b6:	88 23       	and	r24, r24
     8b8:	4a f0       	brmi	.+18     	; 0x8cc <__mulsf3_pse+0x7a>
     8ba:	ee 0f       	add	r30, r30
     8bc:	ff 1f       	adc	r31, r31
     8be:	bb 1f       	adc	r27, r27
     8c0:	66 1f       	adc	r22, r22
     8c2:	77 1f       	adc	r23, r23
     8c4:	88 1f       	adc	r24, r24
     8c6:	91 50       	subi	r25, 0x01	; 1
     8c8:	50 40       	sbci	r21, 0x00	; 0
     8ca:	a9 f7       	brne	.-22     	; 0x8b6 <__mulsf3_pse+0x64>
     8cc:	9e 3f       	cpi	r25, 0xFE	; 254
     8ce:	51 05       	cpc	r21, r1
     8d0:	80 f0       	brcs	.+32     	; 0x8f2 <__mulsf3_pse+0xa0>
     8d2:	0c 94 80 04 	jmp	0x900	; 0x900 <__fp_inf>
     8d6:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__fp_szero>
     8da:	5f 3f       	cpi	r21, 0xFF	; 255
     8dc:	e4 f3       	brlt	.-8      	; 0x8d6 <__mulsf3_pse+0x84>
     8de:	98 3e       	cpi	r25, 0xE8	; 232
     8e0:	d4 f3       	brlt	.-12     	; 0x8d6 <__mulsf3_pse+0x84>
     8e2:	86 95       	lsr	r24
     8e4:	77 95       	ror	r23
     8e6:	67 95       	ror	r22
     8e8:	b7 95       	ror	r27
     8ea:	f7 95       	ror	r31
     8ec:	e7 95       	ror	r30
     8ee:	9f 5f       	subi	r25, 0xFF	; 255
     8f0:	c1 f7       	brne	.-16     	; 0x8e2 <__mulsf3_pse+0x90>
     8f2:	fe 2b       	or	r31, r30
     8f4:	88 0f       	add	r24, r24
     8f6:	91 1d       	adc	r25, r1
     8f8:	96 95       	lsr	r25
     8fa:	87 95       	ror	r24
     8fc:	97 f9       	bld	r25, 7
     8fe:	08 95       	ret

00000900 <__fp_inf>:
     900:	97 f9       	bld	r25, 7
     902:	9f 67       	ori	r25, 0x7F	; 127
     904:	80 e8       	ldi	r24, 0x80	; 128
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	60 e0       	ldi	r22, 0x00	; 0
     90a:	08 95       	ret

0000090c <__fp_nan>:
     90c:	9f ef       	ldi	r25, 0xFF	; 255
     90e:	80 ec       	ldi	r24, 0xC0	; 192
     910:	08 95       	ret

00000912 <__fp_pscA>:
     912:	00 24       	eor	r0, r0
     914:	0a 94       	dec	r0
     916:	16 16       	cp	r1, r22
     918:	17 06       	cpc	r1, r23
     91a:	18 06       	cpc	r1, r24
     91c:	09 06       	cpc	r0, r25
     91e:	08 95       	ret

00000920 <__fp_pscB>:
     920:	00 24       	eor	r0, r0
     922:	0a 94       	dec	r0
     924:	12 16       	cp	r1, r18
     926:	13 06       	cpc	r1, r19
     928:	14 06       	cpc	r1, r20
     92a:	05 06       	cpc	r0, r21
     92c:	08 95       	ret

0000092e <__fp_round>:
     92e:	09 2e       	mov	r0, r25
     930:	03 94       	inc	r0
     932:	00 0c       	add	r0, r0
     934:	11 f4       	brne	.+4      	; 0x93a <__fp_round+0xc>
     936:	88 23       	and	r24, r24
     938:	52 f0       	brmi	.+20     	; 0x94e <__fp_round+0x20>
     93a:	bb 0f       	add	r27, r27
     93c:	40 f4       	brcc	.+16     	; 0x94e <__fp_round+0x20>
     93e:	bf 2b       	or	r27, r31
     940:	11 f4       	brne	.+4      	; 0x946 <__fp_round+0x18>
     942:	60 ff       	sbrs	r22, 0
     944:	04 c0       	rjmp	.+8      	; 0x94e <__fp_round+0x20>
     946:	6f 5f       	subi	r22, 0xFF	; 255
     948:	7f 4f       	sbci	r23, 0xFF	; 255
     94a:	8f 4f       	sbci	r24, 0xFF	; 255
     94c:	9f 4f       	sbci	r25, 0xFF	; 255
     94e:	08 95       	ret

00000950 <__mulsi3>:
     950:	db 01       	movw	r26, r22
     952:	8f 93       	push	r24
     954:	9f 93       	push	r25
     956:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__muluhisi3>
     95a:	bf 91       	pop	r27
     95c:	af 91       	pop	r26
     95e:	a2 9f       	mul	r26, r18
     960:	80 0d       	add	r24, r0
     962:	91 1d       	adc	r25, r1
     964:	a3 9f       	mul	r26, r19
     966:	90 0d       	add	r25, r0
     968:	b2 9f       	mul	r27, r18
     96a:	90 0d       	add	r25, r0
     96c:	11 24       	eor	r1, r1
     96e:	08 95       	ret

00000970 <__divmodhi4>:
     970:	97 fb       	bst	r25, 7
     972:	07 2e       	mov	r0, r23
     974:	16 f4       	brtc	.+4      	; 0x97a <__divmodhi4+0xa>
     976:	00 94       	com	r0
     978:	07 d0       	rcall	.+14     	; 0x988 <__divmodhi4_neg1>
     97a:	77 fd       	sbrc	r23, 7
     97c:	09 d0       	rcall	.+18     	; 0x990 <__divmodhi4_neg2>
     97e:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__udivmodhi4>
     982:	07 fc       	sbrc	r0, 7
     984:	05 d0       	rcall	.+10     	; 0x990 <__divmodhi4_neg2>
     986:	3e f4       	brtc	.+14     	; 0x996 <__divmodhi4_exit>

00000988 <__divmodhi4_neg1>:
     988:	90 95       	com	r25
     98a:	81 95       	neg	r24
     98c:	9f 4f       	sbci	r25, 0xFF	; 255
     98e:	08 95       	ret

00000990 <__divmodhi4_neg2>:
     990:	70 95       	com	r23
     992:	61 95       	neg	r22
     994:	7f 4f       	sbci	r23, 0xFF	; 255

00000996 <__divmodhi4_exit>:
     996:	08 95       	ret

00000998 <__divmodsi4>:
     998:	05 2e       	mov	r0, r21
     99a:	97 fb       	bst	r25, 7
     99c:	1e f4       	brtc	.+6      	; 0x9a4 <__divmodsi4+0xc>
     99e:	00 94       	com	r0
     9a0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__negsi2>
     9a4:	57 fd       	sbrc	r21, 7
     9a6:	07 d0       	rcall	.+14     	; 0x9b6 <__divmodsi4_neg2>
     9a8:	0e 94 0a 05 	call	0xa14	; 0xa14 <__udivmodsi4>
     9ac:	07 fc       	sbrc	r0, 7
     9ae:	03 d0       	rcall	.+6      	; 0x9b6 <__divmodsi4_neg2>
     9b0:	4e f4       	brtc	.+18     	; 0x9c4 <__divmodsi4_exit>
     9b2:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__negsi2>

000009b6 <__divmodsi4_neg2>:
     9b6:	50 95       	com	r21
     9b8:	40 95       	com	r20
     9ba:	30 95       	com	r19
     9bc:	21 95       	neg	r18
     9be:	3f 4f       	sbci	r19, 0xFF	; 255
     9c0:	4f 4f       	sbci	r20, 0xFF	; 255
     9c2:	5f 4f       	sbci	r21, 0xFF	; 255

000009c4 <__divmodsi4_exit>:
     9c4:	08 95       	ret

000009c6 <__negsi2>:
     9c6:	90 95       	com	r25
     9c8:	80 95       	com	r24
     9ca:	70 95       	com	r23
     9cc:	61 95       	neg	r22
     9ce:	7f 4f       	sbci	r23, 0xFF	; 255
     9d0:	8f 4f       	sbci	r24, 0xFF	; 255
     9d2:	9f 4f       	sbci	r25, 0xFF	; 255
     9d4:	08 95       	ret

000009d6 <__muluhisi3>:
     9d6:	0e 94 2c 05 	call	0xa58	; 0xa58 <__umulhisi3>
     9da:	a5 9f       	mul	r26, r21
     9dc:	90 0d       	add	r25, r0
     9de:	b4 9f       	mul	r27, r20
     9e0:	90 0d       	add	r25, r0
     9e2:	a4 9f       	mul	r26, r20
     9e4:	80 0d       	add	r24, r0
     9e6:	91 1d       	adc	r25, r1
     9e8:	11 24       	eor	r1, r1
     9ea:	08 95       	ret

000009ec <__udivmodhi4>:
     9ec:	aa 1b       	sub	r26, r26
     9ee:	bb 1b       	sub	r27, r27
     9f0:	51 e1       	ldi	r21, 0x11	; 17
     9f2:	07 c0       	rjmp	.+14     	; 0xa02 <__udivmodhi4_ep>

000009f4 <__udivmodhi4_loop>:
     9f4:	aa 1f       	adc	r26, r26
     9f6:	bb 1f       	adc	r27, r27
     9f8:	a6 17       	cp	r26, r22
     9fa:	b7 07       	cpc	r27, r23
     9fc:	10 f0       	brcs	.+4      	; 0xa02 <__udivmodhi4_ep>
     9fe:	a6 1b       	sub	r26, r22
     a00:	b7 0b       	sbc	r27, r23

00000a02 <__udivmodhi4_ep>:
     a02:	88 1f       	adc	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	5a 95       	dec	r21
     a08:	a9 f7       	brne	.-22     	; 0x9f4 <__udivmodhi4_loop>
     a0a:	80 95       	com	r24
     a0c:	90 95       	com	r25
     a0e:	bc 01       	movw	r22, r24
     a10:	cd 01       	movw	r24, r26
     a12:	08 95       	ret

00000a14 <__udivmodsi4>:
     a14:	a1 e2       	ldi	r26, 0x21	; 33
     a16:	1a 2e       	mov	r1, r26
     a18:	aa 1b       	sub	r26, r26
     a1a:	bb 1b       	sub	r27, r27
     a1c:	fd 01       	movw	r30, r26
     a1e:	0d c0       	rjmp	.+26     	; 0xa3a <__udivmodsi4_ep>

00000a20 <__udivmodsi4_loop>:
     a20:	aa 1f       	adc	r26, r26
     a22:	bb 1f       	adc	r27, r27
     a24:	ee 1f       	adc	r30, r30
     a26:	ff 1f       	adc	r31, r31
     a28:	a2 17       	cp	r26, r18
     a2a:	b3 07       	cpc	r27, r19
     a2c:	e4 07       	cpc	r30, r20
     a2e:	f5 07       	cpc	r31, r21
     a30:	20 f0       	brcs	.+8      	; 0xa3a <__udivmodsi4_ep>
     a32:	a2 1b       	sub	r26, r18
     a34:	b3 0b       	sbc	r27, r19
     a36:	e4 0b       	sbc	r30, r20
     a38:	f5 0b       	sbc	r31, r21

00000a3a <__udivmodsi4_ep>:
     a3a:	66 1f       	adc	r22, r22
     a3c:	77 1f       	adc	r23, r23
     a3e:	88 1f       	adc	r24, r24
     a40:	99 1f       	adc	r25, r25
     a42:	1a 94       	dec	r1
     a44:	69 f7       	brne	.-38     	; 0xa20 <__udivmodsi4_loop>
     a46:	60 95       	com	r22
     a48:	70 95       	com	r23
     a4a:	80 95       	com	r24
     a4c:	90 95       	com	r25
     a4e:	9b 01       	movw	r18, r22
     a50:	ac 01       	movw	r20, r24
     a52:	bd 01       	movw	r22, r26
     a54:	cf 01       	movw	r24, r30
     a56:	08 95       	ret

00000a58 <__umulhisi3>:
     a58:	a2 9f       	mul	r26, r18
     a5a:	b0 01       	movw	r22, r0
     a5c:	b3 9f       	mul	r27, r19
     a5e:	c0 01       	movw	r24, r0
     a60:	a3 9f       	mul	r26, r19
     a62:	70 0d       	add	r23, r0
     a64:	81 1d       	adc	r24, r1
     a66:	11 24       	eor	r1, r1
     a68:	91 1d       	adc	r25, r1
     a6a:	b2 9f       	mul	r27, r18
     a6c:	70 0d       	add	r23, r0
     a6e:	81 1d       	adc	r24, r1
     a70:	11 24       	eor	r1, r1
     a72:	91 1d       	adc	r25, r1
     a74:	08 95       	ret

00000a76 <sprintf>:
     a76:	ae e0       	ldi	r26, 0x0E	; 14
     a78:	b0 e0       	ldi	r27, 0x00	; 0
     a7a:	e1 e4       	ldi	r30, 0x41	; 65
     a7c:	f5 e0       	ldi	r31, 0x05	; 5
     a7e:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <__prologue_saves__+0x1c>
     a82:	0d 89       	ldd	r16, Y+21	; 0x15
     a84:	1e 89       	ldd	r17, Y+22	; 0x16
     a86:	86 e0       	ldi	r24, 0x06	; 6
     a88:	8c 83       	std	Y+4, r24	; 0x04
     a8a:	1a 83       	std	Y+2, r17	; 0x02
     a8c:	09 83       	std	Y+1, r16	; 0x01
     a8e:	8f ef       	ldi	r24, 0xFF	; 255
     a90:	9f e7       	ldi	r25, 0x7F	; 127
     a92:	9e 83       	std	Y+6, r25	; 0x06
     a94:	8d 83       	std	Y+5, r24	; 0x05
     a96:	ae 01       	movw	r20, r28
     a98:	47 5e       	subi	r20, 0xE7	; 231
     a9a:	5f 4f       	sbci	r21, 0xFF	; 255
     a9c:	6f 89       	ldd	r22, Y+23	; 0x17
     a9e:	78 8d       	ldd	r23, Y+24	; 0x18
     aa0:	ce 01       	movw	r24, r28
     aa2:	01 96       	adiw	r24, 0x01	; 1
     aa4:	0e 94 5d 05 	call	0xaba	; 0xaba <vfprintf>
     aa8:	ef 81       	ldd	r30, Y+7	; 0x07
     aaa:	f8 85       	ldd	r31, Y+8	; 0x08
     aac:	e0 0f       	add	r30, r16
     aae:	f1 1f       	adc	r31, r17
     ab0:	10 82       	st	Z, r1
     ab2:	2e 96       	adiw	r28, 0x0e	; 14
     ab4:	e4 e0       	ldi	r30, 0x04	; 4
     ab6:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__epilogue_restores__+0x1c>

00000aba <vfprintf>:
     aba:	ab e0       	ldi	r26, 0x0B	; 11
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	e3 e6       	ldi	r30, 0x63	; 99
     ac0:	f5 e0       	ldi	r31, 0x05	; 5
     ac2:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__prologue_saves__>
     ac6:	6c 01       	movw	r12, r24
     ac8:	7b 01       	movw	r14, r22
     aca:	8a 01       	movw	r16, r20
     acc:	fc 01       	movw	r30, r24
     ace:	17 82       	std	Z+7, r1	; 0x07
     ad0:	16 82       	std	Z+6, r1	; 0x06
     ad2:	83 81       	ldd	r24, Z+3	; 0x03
     ad4:	81 ff       	sbrs	r24, 1
     ad6:	cc c1       	rjmp	.+920    	; 0xe70 <vfprintf+0x3b6>
     ad8:	ce 01       	movw	r24, r28
     ada:	01 96       	adiw	r24, 0x01	; 1
     adc:	3c 01       	movw	r6, r24
     ade:	f6 01       	movw	r30, r12
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	f7 01       	movw	r30, r14
     ae4:	93 fd       	sbrc	r25, 3
     ae6:	85 91       	lpm	r24, Z+
     ae8:	93 ff       	sbrs	r25, 3
     aea:	81 91       	ld	r24, Z+
     aec:	7f 01       	movw	r14, r30
     aee:	88 23       	and	r24, r24
     af0:	09 f4       	brne	.+2      	; 0xaf4 <vfprintf+0x3a>
     af2:	ba c1       	rjmp	.+884    	; 0xe68 <vfprintf+0x3ae>
     af4:	85 32       	cpi	r24, 0x25	; 37
     af6:	39 f4       	brne	.+14     	; 0xb06 <vfprintf+0x4c>
     af8:	93 fd       	sbrc	r25, 3
     afa:	85 91       	lpm	r24, Z+
     afc:	93 ff       	sbrs	r25, 3
     afe:	81 91       	ld	r24, Z+
     b00:	7f 01       	movw	r14, r30
     b02:	85 32       	cpi	r24, 0x25	; 37
     b04:	29 f4       	brne	.+10     	; 0xb10 <vfprintf+0x56>
     b06:	b6 01       	movw	r22, r12
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     b0e:	e7 cf       	rjmp	.-50     	; 0xade <vfprintf+0x24>
     b10:	91 2c       	mov	r9, r1
     b12:	21 2c       	mov	r2, r1
     b14:	31 2c       	mov	r3, r1
     b16:	ff e1       	ldi	r31, 0x1F	; 31
     b18:	f3 15       	cp	r31, r3
     b1a:	d8 f0       	brcs	.+54     	; 0xb52 <vfprintf+0x98>
     b1c:	8b 32       	cpi	r24, 0x2B	; 43
     b1e:	79 f0       	breq	.+30     	; 0xb3e <vfprintf+0x84>
     b20:	38 f4       	brcc	.+14     	; 0xb30 <vfprintf+0x76>
     b22:	80 32       	cpi	r24, 0x20	; 32
     b24:	79 f0       	breq	.+30     	; 0xb44 <vfprintf+0x8a>
     b26:	83 32       	cpi	r24, 0x23	; 35
     b28:	a1 f4       	brne	.+40     	; 0xb52 <vfprintf+0x98>
     b2a:	23 2d       	mov	r18, r3
     b2c:	20 61       	ori	r18, 0x10	; 16
     b2e:	1d c0       	rjmp	.+58     	; 0xb6a <vfprintf+0xb0>
     b30:	8d 32       	cpi	r24, 0x2D	; 45
     b32:	61 f0       	breq	.+24     	; 0xb4c <vfprintf+0x92>
     b34:	80 33       	cpi	r24, 0x30	; 48
     b36:	69 f4       	brne	.+26     	; 0xb52 <vfprintf+0x98>
     b38:	23 2d       	mov	r18, r3
     b3a:	21 60       	ori	r18, 0x01	; 1
     b3c:	16 c0       	rjmp	.+44     	; 0xb6a <vfprintf+0xb0>
     b3e:	83 2d       	mov	r24, r3
     b40:	82 60       	ori	r24, 0x02	; 2
     b42:	38 2e       	mov	r3, r24
     b44:	e3 2d       	mov	r30, r3
     b46:	e4 60       	ori	r30, 0x04	; 4
     b48:	3e 2e       	mov	r3, r30
     b4a:	2a c0       	rjmp	.+84     	; 0xba0 <vfprintf+0xe6>
     b4c:	f3 2d       	mov	r31, r3
     b4e:	f8 60       	ori	r31, 0x08	; 8
     b50:	1d c0       	rjmp	.+58     	; 0xb8c <vfprintf+0xd2>
     b52:	37 fc       	sbrc	r3, 7
     b54:	2d c0       	rjmp	.+90     	; 0xbb0 <vfprintf+0xf6>
     b56:	20 ed       	ldi	r18, 0xD0	; 208
     b58:	28 0f       	add	r18, r24
     b5a:	2a 30       	cpi	r18, 0x0A	; 10
     b5c:	40 f0       	brcs	.+16     	; 0xb6e <vfprintf+0xb4>
     b5e:	8e 32       	cpi	r24, 0x2E	; 46
     b60:	b9 f4       	brne	.+46     	; 0xb90 <vfprintf+0xd6>
     b62:	36 fc       	sbrc	r3, 6
     b64:	81 c1       	rjmp	.+770    	; 0xe68 <vfprintf+0x3ae>
     b66:	23 2d       	mov	r18, r3
     b68:	20 64       	ori	r18, 0x40	; 64
     b6a:	32 2e       	mov	r3, r18
     b6c:	19 c0       	rjmp	.+50     	; 0xba0 <vfprintf+0xe6>
     b6e:	36 fe       	sbrs	r3, 6
     b70:	06 c0       	rjmp	.+12     	; 0xb7e <vfprintf+0xc4>
     b72:	8a e0       	ldi	r24, 0x0A	; 10
     b74:	98 9e       	mul	r9, r24
     b76:	20 0d       	add	r18, r0
     b78:	11 24       	eor	r1, r1
     b7a:	92 2e       	mov	r9, r18
     b7c:	11 c0       	rjmp	.+34     	; 0xba0 <vfprintf+0xe6>
     b7e:	ea e0       	ldi	r30, 0x0A	; 10
     b80:	2e 9e       	mul	r2, r30
     b82:	20 0d       	add	r18, r0
     b84:	11 24       	eor	r1, r1
     b86:	22 2e       	mov	r2, r18
     b88:	f3 2d       	mov	r31, r3
     b8a:	f0 62       	ori	r31, 0x20	; 32
     b8c:	3f 2e       	mov	r3, r31
     b8e:	08 c0       	rjmp	.+16     	; 0xba0 <vfprintf+0xe6>
     b90:	8c 36       	cpi	r24, 0x6C	; 108
     b92:	21 f4       	brne	.+8      	; 0xb9c <vfprintf+0xe2>
     b94:	83 2d       	mov	r24, r3
     b96:	80 68       	ori	r24, 0x80	; 128
     b98:	38 2e       	mov	r3, r24
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <vfprintf+0xe6>
     b9c:	88 36       	cpi	r24, 0x68	; 104
     b9e:	41 f4       	brne	.+16     	; 0xbb0 <vfprintf+0xf6>
     ba0:	f7 01       	movw	r30, r14
     ba2:	93 fd       	sbrc	r25, 3
     ba4:	85 91       	lpm	r24, Z+
     ba6:	93 ff       	sbrs	r25, 3
     ba8:	81 91       	ld	r24, Z+
     baa:	7f 01       	movw	r14, r30
     bac:	81 11       	cpse	r24, r1
     bae:	b3 cf       	rjmp	.-154    	; 0xb16 <vfprintf+0x5c>
     bb0:	98 2f       	mov	r25, r24
     bb2:	9f 7d       	andi	r25, 0xDF	; 223
     bb4:	95 54       	subi	r25, 0x45	; 69
     bb6:	93 30       	cpi	r25, 0x03	; 3
     bb8:	28 f4       	brcc	.+10     	; 0xbc4 <vfprintf+0x10a>
     bba:	0c 5f       	subi	r16, 0xFC	; 252
     bbc:	1f 4f       	sbci	r17, 0xFF	; 255
     bbe:	9f e3       	ldi	r25, 0x3F	; 63
     bc0:	99 83       	std	Y+1, r25	; 0x01
     bc2:	0d c0       	rjmp	.+26     	; 0xbde <vfprintf+0x124>
     bc4:	83 36       	cpi	r24, 0x63	; 99
     bc6:	31 f0       	breq	.+12     	; 0xbd4 <vfprintf+0x11a>
     bc8:	83 37       	cpi	r24, 0x73	; 115
     bca:	71 f0       	breq	.+28     	; 0xbe8 <vfprintf+0x12e>
     bcc:	83 35       	cpi	r24, 0x53	; 83
     bce:	09 f0       	breq	.+2      	; 0xbd2 <vfprintf+0x118>
     bd0:	59 c0       	rjmp	.+178    	; 0xc84 <vfprintf+0x1ca>
     bd2:	21 c0       	rjmp	.+66     	; 0xc16 <vfprintf+0x15c>
     bd4:	f8 01       	movw	r30, r16
     bd6:	80 81       	ld	r24, Z
     bd8:	89 83       	std	Y+1, r24	; 0x01
     bda:	0e 5f       	subi	r16, 0xFE	; 254
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	88 24       	eor	r8, r8
     be0:	83 94       	inc	r8
     be2:	91 2c       	mov	r9, r1
     be4:	53 01       	movw	r10, r6
     be6:	13 c0       	rjmp	.+38     	; 0xc0e <vfprintf+0x154>
     be8:	28 01       	movw	r4, r16
     bea:	f2 e0       	ldi	r31, 0x02	; 2
     bec:	4f 0e       	add	r4, r31
     bee:	51 1c       	adc	r5, r1
     bf0:	f8 01       	movw	r30, r16
     bf2:	a0 80       	ld	r10, Z
     bf4:	b1 80       	ldd	r11, Z+1	; 0x01
     bf6:	36 fe       	sbrs	r3, 6
     bf8:	03 c0       	rjmp	.+6      	; 0xc00 <vfprintf+0x146>
     bfa:	69 2d       	mov	r22, r9
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <vfprintf+0x14a>
     c00:	6f ef       	ldi	r22, 0xFF	; 255
     c02:	7f ef       	ldi	r23, 0xFF	; 255
     c04:	c5 01       	movw	r24, r10
     c06:	0e 94 49 07 	call	0xe92	; 0xe92 <strnlen>
     c0a:	4c 01       	movw	r8, r24
     c0c:	82 01       	movw	r16, r4
     c0e:	f3 2d       	mov	r31, r3
     c10:	ff 77       	andi	r31, 0x7F	; 127
     c12:	3f 2e       	mov	r3, r31
     c14:	16 c0       	rjmp	.+44     	; 0xc42 <vfprintf+0x188>
     c16:	28 01       	movw	r4, r16
     c18:	22 e0       	ldi	r18, 0x02	; 2
     c1a:	42 0e       	add	r4, r18
     c1c:	51 1c       	adc	r5, r1
     c1e:	f8 01       	movw	r30, r16
     c20:	a0 80       	ld	r10, Z
     c22:	b1 80       	ldd	r11, Z+1	; 0x01
     c24:	36 fe       	sbrs	r3, 6
     c26:	03 c0       	rjmp	.+6      	; 0xc2e <vfprintf+0x174>
     c28:	69 2d       	mov	r22, r9
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <vfprintf+0x178>
     c2e:	6f ef       	ldi	r22, 0xFF	; 255
     c30:	7f ef       	ldi	r23, 0xFF	; 255
     c32:	c5 01       	movw	r24, r10
     c34:	0e 94 3e 07 	call	0xe7c	; 0xe7c <strnlen_P>
     c38:	4c 01       	movw	r8, r24
     c3a:	f3 2d       	mov	r31, r3
     c3c:	f0 68       	ori	r31, 0x80	; 128
     c3e:	3f 2e       	mov	r3, r31
     c40:	82 01       	movw	r16, r4
     c42:	33 fc       	sbrc	r3, 3
     c44:	1b c0       	rjmp	.+54     	; 0xc7c <vfprintf+0x1c2>
     c46:	82 2d       	mov	r24, r2
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	88 16       	cp	r8, r24
     c4c:	99 06       	cpc	r9, r25
     c4e:	b0 f4       	brcc	.+44     	; 0xc7c <vfprintf+0x1c2>
     c50:	b6 01       	movw	r22, r12
     c52:	80 e2       	ldi	r24, 0x20	; 32
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     c5a:	2a 94       	dec	r2
     c5c:	f4 cf       	rjmp	.-24     	; 0xc46 <vfprintf+0x18c>
     c5e:	f5 01       	movw	r30, r10
     c60:	37 fc       	sbrc	r3, 7
     c62:	85 91       	lpm	r24, Z+
     c64:	37 fe       	sbrs	r3, 7
     c66:	81 91       	ld	r24, Z+
     c68:	5f 01       	movw	r10, r30
     c6a:	b6 01       	movw	r22, r12
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     c72:	21 10       	cpse	r2, r1
     c74:	2a 94       	dec	r2
     c76:	21 e0       	ldi	r18, 0x01	; 1
     c78:	82 1a       	sub	r8, r18
     c7a:	91 08       	sbc	r9, r1
     c7c:	81 14       	cp	r8, r1
     c7e:	91 04       	cpc	r9, r1
     c80:	71 f7       	brne	.-36     	; 0xc5e <vfprintf+0x1a4>
     c82:	e8 c0       	rjmp	.+464    	; 0xe54 <vfprintf+0x39a>
     c84:	84 36       	cpi	r24, 0x64	; 100
     c86:	11 f0       	breq	.+4      	; 0xc8c <vfprintf+0x1d2>
     c88:	89 36       	cpi	r24, 0x69	; 105
     c8a:	41 f5       	brne	.+80     	; 0xcdc <vfprintf+0x222>
     c8c:	f8 01       	movw	r30, r16
     c8e:	37 fe       	sbrs	r3, 7
     c90:	07 c0       	rjmp	.+14     	; 0xca0 <vfprintf+0x1e6>
     c92:	60 81       	ld	r22, Z
     c94:	71 81       	ldd	r23, Z+1	; 0x01
     c96:	82 81       	ldd	r24, Z+2	; 0x02
     c98:	93 81       	ldd	r25, Z+3	; 0x03
     c9a:	0c 5f       	subi	r16, 0xFC	; 252
     c9c:	1f 4f       	sbci	r17, 0xFF	; 255
     c9e:	08 c0       	rjmp	.+16     	; 0xcb0 <vfprintf+0x1f6>
     ca0:	60 81       	ld	r22, Z
     ca2:	71 81       	ldd	r23, Z+1	; 0x01
     ca4:	07 2e       	mov	r0, r23
     ca6:	00 0c       	add	r0, r0
     ca8:	88 0b       	sbc	r24, r24
     caa:	99 0b       	sbc	r25, r25
     cac:	0e 5f       	subi	r16, 0xFE	; 254
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
     cb0:	f3 2d       	mov	r31, r3
     cb2:	ff 76       	andi	r31, 0x6F	; 111
     cb4:	3f 2e       	mov	r3, r31
     cb6:	97 ff       	sbrs	r25, 7
     cb8:	09 c0       	rjmp	.+18     	; 0xccc <vfprintf+0x212>
     cba:	90 95       	com	r25
     cbc:	80 95       	com	r24
     cbe:	70 95       	com	r23
     cc0:	61 95       	neg	r22
     cc2:	7f 4f       	sbci	r23, 0xFF	; 255
     cc4:	8f 4f       	sbci	r24, 0xFF	; 255
     cc6:	9f 4f       	sbci	r25, 0xFF	; 255
     cc8:	f0 68       	ori	r31, 0x80	; 128
     cca:	3f 2e       	mov	r3, r31
     ccc:	2a e0       	ldi	r18, 0x0A	; 10
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	a3 01       	movw	r20, r6
     cd2:	0e 94 90 07 	call	0xf20	; 0xf20 <__ultoa_invert>
     cd6:	88 2e       	mov	r8, r24
     cd8:	86 18       	sub	r8, r6
     cda:	45 c0       	rjmp	.+138    	; 0xd66 <vfprintf+0x2ac>
     cdc:	85 37       	cpi	r24, 0x75	; 117
     cde:	31 f4       	brne	.+12     	; 0xcec <vfprintf+0x232>
     ce0:	23 2d       	mov	r18, r3
     ce2:	2f 7e       	andi	r18, 0xEF	; 239
     ce4:	b2 2e       	mov	r11, r18
     ce6:	2a e0       	ldi	r18, 0x0A	; 10
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	25 c0       	rjmp	.+74     	; 0xd36 <vfprintf+0x27c>
     cec:	93 2d       	mov	r25, r3
     cee:	99 7f       	andi	r25, 0xF9	; 249
     cf0:	b9 2e       	mov	r11, r25
     cf2:	8f 36       	cpi	r24, 0x6F	; 111
     cf4:	c1 f0       	breq	.+48     	; 0xd26 <vfprintf+0x26c>
     cf6:	18 f4       	brcc	.+6      	; 0xcfe <vfprintf+0x244>
     cf8:	88 35       	cpi	r24, 0x58	; 88
     cfa:	79 f0       	breq	.+30     	; 0xd1a <vfprintf+0x260>
     cfc:	b5 c0       	rjmp	.+362    	; 0xe68 <vfprintf+0x3ae>
     cfe:	80 37       	cpi	r24, 0x70	; 112
     d00:	19 f0       	breq	.+6      	; 0xd08 <vfprintf+0x24e>
     d02:	88 37       	cpi	r24, 0x78	; 120
     d04:	21 f0       	breq	.+8      	; 0xd0e <vfprintf+0x254>
     d06:	b0 c0       	rjmp	.+352    	; 0xe68 <vfprintf+0x3ae>
     d08:	e9 2f       	mov	r30, r25
     d0a:	e0 61       	ori	r30, 0x10	; 16
     d0c:	be 2e       	mov	r11, r30
     d0e:	b4 fe       	sbrs	r11, 4
     d10:	0d c0       	rjmp	.+26     	; 0xd2c <vfprintf+0x272>
     d12:	fb 2d       	mov	r31, r11
     d14:	f4 60       	ori	r31, 0x04	; 4
     d16:	bf 2e       	mov	r11, r31
     d18:	09 c0       	rjmp	.+18     	; 0xd2c <vfprintf+0x272>
     d1a:	34 fe       	sbrs	r3, 4
     d1c:	0a c0       	rjmp	.+20     	; 0xd32 <vfprintf+0x278>
     d1e:	29 2f       	mov	r18, r25
     d20:	26 60       	ori	r18, 0x06	; 6
     d22:	b2 2e       	mov	r11, r18
     d24:	06 c0       	rjmp	.+12     	; 0xd32 <vfprintf+0x278>
     d26:	28 e0       	ldi	r18, 0x08	; 8
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	05 c0       	rjmp	.+10     	; 0xd36 <vfprintf+0x27c>
     d2c:	20 e1       	ldi	r18, 0x10	; 16
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <vfprintf+0x27c>
     d32:	20 e1       	ldi	r18, 0x10	; 16
     d34:	32 e0       	ldi	r19, 0x02	; 2
     d36:	f8 01       	movw	r30, r16
     d38:	b7 fe       	sbrs	r11, 7
     d3a:	07 c0       	rjmp	.+14     	; 0xd4a <vfprintf+0x290>
     d3c:	60 81       	ld	r22, Z
     d3e:	71 81       	ldd	r23, Z+1	; 0x01
     d40:	82 81       	ldd	r24, Z+2	; 0x02
     d42:	93 81       	ldd	r25, Z+3	; 0x03
     d44:	0c 5f       	subi	r16, 0xFC	; 252
     d46:	1f 4f       	sbci	r17, 0xFF	; 255
     d48:	06 c0       	rjmp	.+12     	; 0xd56 <vfprintf+0x29c>
     d4a:	60 81       	ld	r22, Z
     d4c:	71 81       	ldd	r23, Z+1	; 0x01
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 5f       	subi	r16, 0xFE	; 254
     d54:	1f 4f       	sbci	r17, 0xFF	; 255
     d56:	a3 01       	movw	r20, r6
     d58:	0e 94 90 07 	call	0xf20	; 0xf20 <__ultoa_invert>
     d5c:	88 2e       	mov	r8, r24
     d5e:	86 18       	sub	r8, r6
     d60:	fb 2d       	mov	r31, r11
     d62:	ff 77       	andi	r31, 0x7F	; 127
     d64:	3f 2e       	mov	r3, r31
     d66:	36 fe       	sbrs	r3, 6
     d68:	0d c0       	rjmp	.+26     	; 0xd84 <vfprintf+0x2ca>
     d6a:	23 2d       	mov	r18, r3
     d6c:	2e 7f       	andi	r18, 0xFE	; 254
     d6e:	a2 2e       	mov	r10, r18
     d70:	89 14       	cp	r8, r9
     d72:	58 f4       	brcc	.+22     	; 0xd8a <vfprintf+0x2d0>
     d74:	34 fe       	sbrs	r3, 4
     d76:	0b c0       	rjmp	.+22     	; 0xd8e <vfprintf+0x2d4>
     d78:	32 fc       	sbrc	r3, 2
     d7a:	09 c0       	rjmp	.+18     	; 0xd8e <vfprintf+0x2d4>
     d7c:	83 2d       	mov	r24, r3
     d7e:	8e 7e       	andi	r24, 0xEE	; 238
     d80:	a8 2e       	mov	r10, r24
     d82:	05 c0       	rjmp	.+10     	; 0xd8e <vfprintf+0x2d4>
     d84:	b8 2c       	mov	r11, r8
     d86:	a3 2c       	mov	r10, r3
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <vfprintf+0x2d6>
     d8a:	b8 2c       	mov	r11, r8
     d8c:	01 c0       	rjmp	.+2      	; 0xd90 <vfprintf+0x2d6>
     d8e:	b9 2c       	mov	r11, r9
     d90:	a4 fe       	sbrs	r10, 4
     d92:	0f c0       	rjmp	.+30     	; 0xdb2 <vfprintf+0x2f8>
     d94:	fe 01       	movw	r30, r28
     d96:	e8 0d       	add	r30, r8
     d98:	f1 1d       	adc	r31, r1
     d9a:	80 81       	ld	r24, Z
     d9c:	80 33       	cpi	r24, 0x30	; 48
     d9e:	21 f4       	brne	.+8      	; 0xda8 <vfprintf+0x2ee>
     da0:	9a 2d       	mov	r25, r10
     da2:	99 7e       	andi	r25, 0xE9	; 233
     da4:	a9 2e       	mov	r10, r25
     da6:	09 c0       	rjmp	.+18     	; 0xdba <vfprintf+0x300>
     da8:	a2 fe       	sbrs	r10, 2
     daa:	06 c0       	rjmp	.+12     	; 0xdb8 <vfprintf+0x2fe>
     dac:	b3 94       	inc	r11
     dae:	b3 94       	inc	r11
     db0:	04 c0       	rjmp	.+8      	; 0xdba <vfprintf+0x300>
     db2:	8a 2d       	mov	r24, r10
     db4:	86 78       	andi	r24, 0x86	; 134
     db6:	09 f0       	breq	.+2      	; 0xdba <vfprintf+0x300>
     db8:	b3 94       	inc	r11
     dba:	a3 fc       	sbrc	r10, 3
     dbc:	11 c0       	rjmp	.+34     	; 0xde0 <vfprintf+0x326>
     dbe:	a0 fe       	sbrs	r10, 0
     dc0:	06 c0       	rjmp	.+12     	; 0xdce <vfprintf+0x314>
     dc2:	b2 14       	cp	r11, r2
     dc4:	88 f4       	brcc	.+34     	; 0xde8 <vfprintf+0x32e>
     dc6:	28 0c       	add	r2, r8
     dc8:	92 2c       	mov	r9, r2
     dca:	9b 18       	sub	r9, r11
     dcc:	0e c0       	rjmp	.+28     	; 0xdea <vfprintf+0x330>
     dce:	b2 14       	cp	r11, r2
     dd0:	60 f4       	brcc	.+24     	; 0xdea <vfprintf+0x330>
     dd2:	b6 01       	movw	r22, r12
     dd4:	80 e2       	ldi	r24, 0x20	; 32
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     ddc:	b3 94       	inc	r11
     dde:	f7 cf       	rjmp	.-18     	; 0xdce <vfprintf+0x314>
     de0:	b2 14       	cp	r11, r2
     de2:	18 f4       	brcc	.+6      	; 0xdea <vfprintf+0x330>
     de4:	2b 18       	sub	r2, r11
     de6:	02 c0       	rjmp	.+4      	; 0xdec <vfprintf+0x332>
     de8:	98 2c       	mov	r9, r8
     dea:	21 2c       	mov	r2, r1
     dec:	a4 fe       	sbrs	r10, 4
     dee:	10 c0       	rjmp	.+32     	; 0xe10 <vfprintf+0x356>
     df0:	b6 01       	movw	r22, r12
     df2:	80 e3       	ldi	r24, 0x30	; 48
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     dfa:	a2 fe       	sbrs	r10, 2
     dfc:	17 c0       	rjmp	.+46     	; 0xe2c <vfprintf+0x372>
     dfe:	a1 fc       	sbrc	r10, 1
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <vfprintf+0x34e>
     e02:	88 e7       	ldi	r24, 0x78	; 120
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <vfprintf+0x352>
     e08:	88 e5       	ldi	r24, 0x58	; 88
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	b6 01       	movw	r22, r12
     e0e:	0c c0       	rjmp	.+24     	; 0xe28 <vfprintf+0x36e>
     e10:	8a 2d       	mov	r24, r10
     e12:	86 78       	andi	r24, 0x86	; 134
     e14:	59 f0       	breq	.+22     	; 0xe2c <vfprintf+0x372>
     e16:	a1 fe       	sbrs	r10, 1
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x364>
     e1a:	8b e2       	ldi	r24, 0x2B	; 43
     e1c:	01 c0       	rjmp	.+2      	; 0xe20 <vfprintf+0x366>
     e1e:	80 e2       	ldi	r24, 0x20	; 32
     e20:	a7 fc       	sbrc	r10, 7
     e22:	8d e2       	ldi	r24, 0x2D	; 45
     e24:	b6 01       	movw	r22, r12
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     e2c:	89 14       	cp	r8, r9
     e2e:	38 f4       	brcc	.+14     	; 0xe3e <vfprintf+0x384>
     e30:	b6 01       	movw	r22, r12
     e32:	80 e3       	ldi	r24, 0x30	; 48
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     e3a:	9a 94       	dec	r9
     e3c:	f7 cf       	rjmp	.-18     	; 0xe2c <vfprintf+0x372>
     e3e:	8a 94       	dec	r8
     e40:	f3 01       	movw	r30, r6
     e42:	e8 0d       	add	r30, r8
     e44:	f1 1d       	adc	r31, r1
     e46:	80 81       	ld	r24, Z
     e48:	b6 01       	movw	r22, r12
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     e50:	81 10       	cpse	r8, r1
     e52:	f5 cf       	rjmp	.-22     	; 0xe3e <vfprintf+0x384>
     e54:	22 20       	and	r2, r2
     e56:	09 f4       	brne	.+2      	; 0xe5a <vfprintf+0x3a0>
     e58:	42 ce       	rjmp	.-892    	; 0xade <vfprintf+0x24>
     e5a:	b6 01       	movw	r22, r12
     e5c:	80 e2       	ldi	r24, 0x20	; 32
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	0e 94 54 07 	call	0xea8	; 0xea8 <fputc>
     e64:	2a 94       	dec	r2
     e66:	f6 cf       	rjmp	.-20     	; 0xe54 <vfprintf+0x39a>
     e68:	f6 01       	movw	r30, r12
     e6a:	86 81       	ldd	r24, Z+6	; 0x06
     e6c:	97 81       	ldd	r25, Z+7	; 0x07
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0x3ba>
     e70:	8f ef       	ldi	r24, 0xFF	; 255
     e72:	9f ef       	ldi	r25, 0xFF	; 255
     e74:	2b 96       	adiw	r28, 0x0b	; 11
     e76:	e2 e1       	ldi	r30, 0x12	; 18
     e78:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__epilogue_restores__>

00000e7c <strnlen_P>:
     e7c:	fc 01       	movw	r30, r24
     e7e:	05 90       	lpm	r0, Z+
     e80:	61 50       	subi	r22, 0x01	; 1
     e82:	70 40       	sbci	r23, 0x00	; 0
     e84:	01 10       	cpse	r0, r1
     e86:	d8 f7       	brcc	.-10     	; 0xe7e <strnlen_P+0x2>
     e88:	80 95       	com	r24
     e8a:	90 95       	com	r25
     e8c:	8e 0f       	add	r24, r30
     e8e:	9f 1f       	adc	r25, r31
     e90:	08 95       	ret

00000e92 <strnlen>:
     e92:	fc 01       	movw	r30, r24
     e94:	61 50       	subi	r22, 0x01	; 1
     e96:	70 40       	sbci	r23, 0x00	; 0
     e98:	01 90       	ld	r0, Z+
     e9a:	01 10       	cpse	r0, r1
     e9c:	d8 f7       	brcc	.-10     	; 0xe94 <strnlen+0x2>
     e9e:	80 95       	com	r24
     ea0:	90 95       	com	r25
     ea2:	8e 0f       	add	r24, r30
     ea4:	9f 1f       	adc	r25, r31
     ea6:	08 95       	ret

00000ea8 <fputc>:
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	fb 01       	movw	r30, r22
     eb2:	23 81       	ldd	r18, Z+3	; 0x03
     eb4:	21 fd       	sbrc	r18, 1
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <fputc+0x16>
     eb8:	8f ef       	ldi	r24, 0xFF	; 255
     eba:	9f ef       	ldi	r25, 0xFF	; 255
     ebc:	2c c0       	rjmp	.+88     	; 0xf16 <fputc+0x6e>
     ebe:	22 ff       	sbrs	r18, 2
     ec0:	16 c0       	rjmp	.+44     	; 0xeee <fputc+0x46>
     ec2:	46 81       	ldd	r20, Z+6	; 0x06
     ec4:	57 81       	ldd	r21, Z+7	; 0x07
     ec6:	24 81       	ldd	r18, Z+4	; 0x04
     ec8:	35 81       	ldd	r19, Z+5	; 0x05
     eca:	42 17       	cp	r20, r18
     ecc:	53 07       	cpc	r21, r19
     ece:	44 f4       	brge	.+16     	; 0xee0 <fputc+0x38>
     ed0:	a0 81       	ld	r26, Z
     ed2:	b1 81       	ldd	r27, Z+1	; 0x01
     ed4:	9d 01       	movw	r18, r26
     ed6:	2f 5f       	subi	r18, 0xFF	; 255
     ed8:	3f 4f       	sbci	r19, 0xFF	; 255
     eda:	31 83       	std	Z+1, r19	; 0x01
     edc:	20 83       	st	Z, r18
     ede:	8c 93       	st	X, r24
     ee0:	26 81       	ldd	r18, Z+6	; 0x06
     ee2:	37 81       	ldd	r19, Z+7	; 0x07
     ee4:	2f 5f       	subi	r18, 0xFF	; 255
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	37 83       	std	Z+7, r19	; 0x07
     eea:	26 83       	std	Z+6, r18	; 0x06
     eec:	14 c0       	rjmp	.+40     	; 0xf16 <fputc+0x6e>
     eee:	8b 01       	movw	r16, r22
     ef0:	ec 01       	movw	r28, r24
     ef2:	fb 01       	movw	r30, r22
     ef4:	00 84       	ldd	r0, Z+8	; 0x08
     ef6:	f1 85       	ldd	r31, Z+9	; 0x09
     ef8:	e0 2d       	mov	r30, r0
     efa:	09 95       	icall
     efc:	89 2b       	or	r24, r25
     efe:	e1 f6       	brne	.-72     	; 0xeb8 <fputc+0x10>
     f00:	d8 01       	movw	r26, r16
     f02:	16 96       	adiw	r26, 0x06	; 6
     f04:	8d 91       	ld	r24, X+
     f06:	9c 91       	ld	r25, X
     f08:	17 97       	sbiw	r26, 0x07	; 7
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	17 96       	adiw	r26, 0x07	; 7
     f0e:	9c 93       	st	X, r25
     f10:	8e 93       	st	-X, r24
     f12:	16 97       	sbiw	r26, 0x06	; 6
     f14:	ce 01       	movw	r24, r28
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	1f 91       	pop	r17
     f1c:	0f 91       	pop	r16
     f1e:	08 95       	ret

00000f20 <__ultoa_invert>:
     f20:	fa 01       	movw	r30, r20
     f22:	aa 27       	eor	r26, r26
     f24:	28 30       	cpi	r18, 0x08	; 8
     f26:	51 f1       	breq	.+84     	; 0xf7c <__ultoa_invert+0x5c>
     f28:	20 31       	cpi	r18, 0x10	; 16
     f2a:	81 f1       	breq	.+96     	; 0xf8c <__ultoa_invert+0x6c>
     f2c:	e8 94       	clt
     f2e:	6f 93       	push	r22
     f30:	6e 7f       	andi	r22, 0xFE	; 254
     f32:	6e 5f       	subi	r22, 0xFE	; 254
     f34:	7f 4f       	sbci	r23, 0xFF	; 255
     f36:	8f 4f       	sbci	r24, 0xFF	; 255
     f38:	9f 4f       	sbci	r25, 0xFF	; 255
     f3a:	af 4f       	sbci	r26, 0xFF	; 255
     f3c:	b1 e0       	ldi	r27, 0x01	; 1
     f3e:	3e d0       	rcall	.+124    	; 0xfbc <__ultoa_invert+0x9c>
     f40:	b4 e0       	ldi	r27, 0x04	; 4
     f42:	3c d0       	rcall	.+120    	; 0xfbc <__ultoa_invert+0x9c>
     f44:	67 0f       	add	r22, r23
     f46:	78 1f       	adc	r23, r24
     f48:	89 1f       	adc	r24, r25
     f4a:	9a 1f       	adc	r25, r26
     f4c:	a1 1d       	adc	r26, r1
     f4e:	68 0f       	add	r22, r24
     f50:	79 1f       	adc	r23, r25
     f52:	8a 1f       	adc	r24, r26
     f54:	91 1d       	adc	r25, r1
     f56:	a1 1d       	adc	r26, r1
     f58:	6a 0f       	add	r22, r26
     f5a:	71 1d       	adc	r23, r1
     f5c:	81 1d       	adc	r24, r1
     f5e:	91 1d       	adc	r25, r1
     f60:	a1 1d       	adc	r26, r1
     f62:	20 d0       	rcall	.+64     	; 0xfa4 <__ultoa_invert+0x84>
     f64:	09 f4       	brne	.+2      	; 0xf68 <__ultoa_invert+0x48>
     f66:	68 94       	set
     f68:	3f 91       	pop	r19
     f6a:	2a e0       	ldi	r18, 0x0A	; 10
     f6c:	26 9f       	mul	r18, r22
     f6e:	11 24       	eor	r1, r1
     f70:	30 19       	sub	r19, r0
     f72:	30 5d       	subi	r19, 0xD0	; 208
     f74:	31 93       	st	Z+, r19
     f76:	de f6       	brtc	.-74     	; 0xf2e <__ultoa_invert+0xe>
     f78:	cf 01       	movw	r24, r30
     f7a:	08 95       	ret
     f7c:	46 2f       	mov	r20, r22
     f7e:	47 70       	andi	r20, 0x07	; 7
     f80:	40 5d       	subi	r20, 0xD0	; 208
     f82:	41 93       	st	Z+, r20
     f84:	b3 e0       	ldi	r27, 0x03	; 3
     f86:	0f d0       	rcall	.+30     	; 0xfa6 <__ultoa_invert+0x86>
     f88:	c9 f7       	brne	.-14     	; 0xf7c <__ultoa_invert+0x5c>
     f8a:	f6 cf       	rjmp	.-20     	; 0xf78 <__ultoa_invert+0x58>
     f8c:	46 2f       	mov	r20, r22
     f8e:	4f 70       	andi	r20, 0x0F	; 15
     f90:	40 5d       	subi	r20, 0xD0	; 208
     f92:	4a 33       	cpi	r20, 0x3A	; 58
     f94:	18 f0       	brcs	.+6      	; 0xf9c <__ultoa_invert+0x7c>
     f96:	49 5d       	subi	r20, 0xD9	; 217
     f98:	31 fd       	sbrc	r19, 1
     f9a:	40 52       	subi	r20, 0x20	; 32
     f9c:	41 93       	st	Z+, r20
     f9e:	02 d0       	rcall	.+4      	; 0xfa4 <__ultoa_invert+0x84>
     fa0:	a9 f7       	brne	.-22     	; 0xf8c <__ultoa_invert+0x6c>
     fa2:	ea cf       	rjmp	.-44     	; 0xf78 <__ultoa_invert+0x58>
     fa4:	b4 e0       	ldi	r27, 0x04	; 4
     fa6:	a6 95       	lsr	r26
     fa8:	97 95       	ror	r25
     faa:	87 95       	ror	r24
     fac:	77 95       	ror	r23
     fae:	67 95       	ror	r22
     fb0:	ba 95       	dec	r27
     fb2:	c9 f7       	brne	.-14     	; 0xfa6 <__ultoa_invert+0x86>
     fb4:	00 97       	sbiw	r24, 0x00	; 0
     fb6:	61 05       	cpc	r22, r1
     fb8:	71 05       	cpc	r23, r1
     fba:	08 95       	ret
     fbc:	9b 01       	movw	r18, r22
     fbe:	ac 01       	movw	r20, r24
     fc0:	0a 2e       	mov	r0, r26
     fc2:	06 94       	lsr	r0
     fc4:	57 95       	ror	r21
     fc6:	47 95       	ror	r20
     fc8:	37 95       	ror	r19
     fca:	27 95       	ror	r18
     fcc:	ba 95       	dec	r27
     fce:	c9 f7       	brne	.-14     	; 0xfc2 <__ultoa_invert+0xa2>
     fd0:	62 0f       	add	r22, r18
     fd2:	73 1f       	adc	r23, r19
     fd4:	84 1f       	adc	r24, r20
     fd6:	95 1f       	adc	r25, r21
     fd8:	a0 1d       	adc	r26, r0
     fda:	08 95       	ret

00000fdc <__prologue_saves__>:
     fdc:	2f 92       	push	r2
     fde:	3f 92       	push	r3
     fe0:	4f 92       	push	r4
     fe2:	5f 92       	push	r5
     fe4:	6f 92       	push	r6
     fe6:	7f 92       	push	r7
     fe8:	8f 92       	push	r8
     fea:	9f 92       	push	r9
     fec:	af 92       	push	r10
     fee:	bf 92       	push	r11
     ff0:	cf 92       	push	r12
     ff2:	df 92       	push	r13
     ff4:	ef 92       	push	r14
     ff6:	ff 92       	push	r15
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	cd b7       	in	r28, 0x3d	; 61
    1002:	de b7       	in	r29, 0x3e	; 62
    1004:	ca 1b       	sub	r28, r26
    1006:	db 0b       	sbc	r29, r27
    1008:	0f b6       	in	r0, 0x3f	; 63
    100a:	f8 94       	cli
    100c:	de bf       	out	0x3e, r29	; 62
    100e:	0f be       	out	0x3f, r0	; 63
    1010:	cd bf       	out	0x3d, r28	; 61
    1012:	09 94       	ijmp

00001014 <__epilogue_restores__>:
    1014:	2a 88       	ldd	r2, Y+18	; 0x12
    1016:	39 88       	ldd	r3, Y+17	; 0x11
    1018:	48 88       	ldd	r4, Y+16	; 0x10
    101a:	5f 84       	ldd	r5, Y+15	; 0x0f
    101c:	6e 84       	ldd	r6, Y+14	; 0x0e
    101e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1020:	8c 84       	ldd	r8, Y+12	; 0x0c
    1022:	9b 84       	ldd	r9, Y+11	; 0x0b
    1024:	aa 84       	ldd	r10, Y+10	; 0x0a
    1026:	b9 84       	ldd	r11, Y+9	; 0x09
    1028:	c8 84       	ldd	r12, Y+8	; 0x08
    102a:	df 80       	ldd	r13, Y+7	; 0x07
    102c:	ee 80       	ldd	r14, Y+6	; 0x06
    102e:	fd 80       	ldd	r15, Y+5	; 0x05
    1030:	0c 81       	ldd	r16, Y+4	; 0x04
    1032:	1b 81       	ldd	r17, Y+3	; 0x03
    1034:	aa 81       	ldd	r26, Y+2	; 0x02
    1036:	b9 81       	ldd	r27, Y+1	; 0x01
    1038:	ce 0f       	add	r28, r30
    103a:	d1 1d       	adc	r29, r1
    103c:	0f b6       	in	r0, 0x3f	; 63
    103e:	f8 94       	cli
    1040:	de bf       	out	0x3e, r29	; 62
    1042:	0f be       	out	0x3f, r0	; 63
    1044:	cd bf       	out	0x3d, r28	; 61
    1046:	ed 01       	movw	r28, r26
    1048:	08 95       	ret

0000104a <_exit>:
    104a:	f8 94       	cli

0000104c <__stop_program>:
    104c:	ff cf       	rjmp	.-2      	; 0x104c <__stop_program>
